/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.21
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};                                                    
#endif


#include "Python.h"

/*************************************************************** -*- c -*-
 * python/precommon.swg
 *
 * Rename all exported symbols from common.swg, to avoid symbol
 * clashes if multiple interpreters are included
 *
 ************************************************************************/

#define SWIG_TypeRegister    SWIG_Python_TypeRegister
#define SWIG_TypeCheck       SWIG_Python_TypeCheck
#define SWIG_TypeCast        SWIG_Python_TypeCast
#define SWIG_TypeDynamicCast SWIG_Python_TypeDynamicCast
#define SWIG_TypeName        SWIG_Python_TypeName
#define SWIG_TypeQuery       SWIG_Python_TypeQuery
#define SWIG_TypeClientData  SWIG_Python_TypeClientData
#define SWIG_PackData        SWIG_Python_PackData 
#define SWIG_UnpackData      SWIG_Python_UnpackData 


/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  if defined(_MSC_VER) || defined(__GNUC__)
#    if defined(STATIC_LINKED)
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) extern a
#    else
#      define SWIGEXPORT(a) __declspec(dllexport) a
#      define SWIGIMPORT(a) extern a
#    endif
#  else
#    if defined(__BORLANDC__)
#      define SWIGEXPORT(a) a _export
#      define SWIGIMPORT(a) a _export
#    else
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) a
#    endif
#  endif
#else
#  define SWIGEXPORT(a) a
#  define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#  define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#  define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);
SWIGIMPORT(char *)           SWIG_PackData(char *, void *, int);
SWIGIMPORT(char *)           SWIG_UnpackData(char *, void *, int);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti) {
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
  l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty) {
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
        s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) {
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/* Return the name associated with this type */
SWIGRUNTIME(const char *)
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
        if ((strcmp(tc->name, equiv->name) == 0))
          SWIG_TypeClientData(tc,clientdata);
        tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

#endif

#ifdef __cplusplus
}
#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags) \
  SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags) \
  SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags) \
  SWIG_Python_MustGetPtr(p, type, argnum, flags)

/* Python-specific SWIG API */
#define SWIG_newvarlink() \
  SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr) \
  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags) \
  SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type) \
  SWIG_Python_NewPackedObj(ptr, sz, type)
#define SWIG_InstallConstants(d, constants) \
  SWIG_Python_InstallConstants(d, constants)

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(int)               SWIG_Python_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPointerObj(void *, swig_type_info *,int own);
SWIGIMPORT(void *)            SWIG_Python_MustGetPtr(PyObject *, swig_type_info *, int, int);
SWIGIMPORT(PyObject *)        SWIG_Python_newvarlink(void);
SWIGIMPORT(void)              SWIG_Python_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGIMPORT(int)               SWIG_Python_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPackedObj(void *, int sz, swig_type_info *);
SWIGIMPORT(void)              SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]);

#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",              /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_Python_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_Python_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c = 0;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
    PyObject *zero = PyInt_FromLong(0);
    PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
    Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty && c) {
      char *temp = (char *) malloc(64+strlen(ty->name)+strlen(c));
      sprintf(temp,"Type error. Got %s, expected %s", c, ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME(void *)
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  SWIG_Python_ConvertPtr(obj, &result, ty, flags | SWIG_POINTER_EXCEPTION);
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c = 0;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty && c) {
      char *temp = (char *) malloc(64+strlen(ty->name)+strlen(c));
      sprintf(temp,"Type error. Got %s, expected %s", c, ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
        PyObject *n = PyInt_FromLong(1);
        PyObject_SetAttrString(inst,(char*)"thisown",n);
        Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_Python_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

/* Contract support */

#define SWIG_contract_assert(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t swig_types[0] 
#define  SWIGTYPE_p_RavlN__DListCTunsigned_char_t swig_types[1] 
#define  SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t swig_types[2] 
#define  SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t swig_types[3] 
#define  SWIGTYPE_p_RavlN__Int64T swig_types[4] 
#define  SWIGTYPE_p_RavlN__Affine2dC swig_types[5] 
#define  SWIGTYPE_p_RavlN__Point2dC swig_types[6] 
#define  SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t swig_types[7] 
#define  SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t swig_types[8] 
#define  SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t swig_types[9] 
#define  SWIGTYPE_p_RavlN__Index2dC swig_types[10] 
#define  SWIGTYPE_p_RavlN__Polygon2dC swig_types[11] 
#define  SWIGTYPE_p_RavlN__IndexC swig_types[12] 
#define  SWIGTYPE_p_RavlN__RealRange2dC swig_types[13] 
#define  SWIGTYPE_p_RavlN__IndexRange2dC swig_types[14] 
#define  SWIGTYPE_p_RavlImageN__FontC swig_types[15] 
#define  SWIGTYPE_p_RavlN__RealRangeC swig_types[16] 
#define  SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t swig_types[17] 
#define  SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t swig_types[18] 
#define  SWIGTYPE_p_RavlN__Array2dCTdouble_t swig_types[19] 
#define  SWIGTYPE_p_RavlN__DListCTdouble_t swig_types[20] 
#define  SWIGTYPE_p_RavlN__DLIterCTdouble_t swig_types[21] 
#define  SWIGTYPE_p_RavlImageN__ImageCTdouble_t swig_types[22] 
#define  SWIGTYPE_p_RavlN__Int16T swig_types[23] 
#define  SWIGTYPE_p_RavlN__DListCTunsigned_int_t swig_types[24] 
#define  SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t swig_types[25] 
#define  SWIGTYPE_p_RavlN__PointSet2dC swig_types[26] 
#define  SWIGTYPE_p_RavlN__ByteT swig_types[27] 
#define  SWIGTYPE_p_RavlN__UIntT swig_types[28] 
#define  SWIGTYPE_p_RavlN__RealT swig_types[29] 
#define  SWIGTYPE_p_std__ostream swig_types[30] 
#define  SWIGTYPE_p_RavlImageN__ByteRGBValueC swig_types[31] 
#define  SWIGTYPE_p_RavlN__DLIterCTlong_long_t swig_types[32] 
#define  SWIGTYPE_p_RavlN__DListCTlong_long_t swig_types[33] 
#define  SWIGTYPE_p_RavlImageN__RealRGBValueC swig_types[34] 
#define  SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t swig_types[35] 
#define  SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t swig_types[36] 
#define  SWIGTYPE_p_RavlN__IntT swig_types[37] 
#define  SWIGTYPE_p_RavlN__DListCTint_t swig_types[38] 
#define  SWIGTYPE_p_RavlN__DLIterCTint_t swig_types[39] 
#define  SWIGTYPE_p_RavlN__DLIterCTshort_t swig_types[40] 
#define  SWIGTYPE_p_RavlN__DListCTshort_t swig_types[41] 
#define  SWIGTYPE_p_RavlN__DateC swig_types[42] 
#define  SWIGTYPE_p_RavlN__StringC swig_types[43] 
static swig_type_info *swig_types[45];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _Ravl.so
  ------------------------------------------------*/
#define SWIG_init    init_Ravl

#define SWIG_name    "_Ravl"

namespace RavlGUIN
{
  extern void InitDPWindowFormat();
  extern void InitDPDisplayImage();
  void XInitRavlGUIDisplay()
  {
    InitDPWindowFormat();
    InitDPDisplayImage();
  }
}


#include "Ravl/Types.hh"
#include "Ravl/Stream.hh"


#include "Ravl/DList.hh"
#include "Ravl/DLIter.hh"


  PyObject *ToList(RavlN::DListC<RavlN::RealT> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::RealT> it(list); it; it++)
    {
      PyObject *temp = PyFloat_FromDouble(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }


  PyObject *ToList(RavlN::DListC<RavlN::IntT> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::IntT> it(list); it; it++)
    {
      PyObject *temp = PyInt_FromLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }


  PyObject *ToList(RavlN::DListC<RavlN::UIntT> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::UIntT> it(list); it; it++)
    {
      PyObject *temp = PyInt_FromLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }


  PyObject *ToList(RavlN::DListC<RavlN::Int64T> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::Int64T> it(list); it; it++)
    {
      PyObject *temp = PyLong_FromLongLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }


  PyObject *ToList(RavlN::DListC<RavlN::Int16T> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::Int16T> it(list); it; it++)
    {
      PyObject *temp = PyInt_FromLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }


  PyObject *ToList(RavlN::DListC<RavlN::ByteT> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    for (RavlN::DLIterC<RavlN::ByteT> it(list); it; it++)
    {
      PyObject *temp = PyInt_FromLong(*it);
      if (PyErr_Occurred())
        SWIG_fail;
      PyList_Append(obj, temp);
    }
    return obj;
    fail:
    return NULL;
  }


#include "Ravl/Point2d.hh"


  PyObject *ToList(RavlN::DListC<RavlN::Point2dC> list)
  {
    PyObject *obj = PyList_New(0);
    if (PyErr_Occurred())
      SWIG_fail;
    {
      swig_type_info *typeInfo = SWIG_TypeQuery("RavlN::Point2dC" " *");
      for (RavlN::DLIterC<RavlN::Point2dC> it(list); it; it++)
      {
        PyObject *temp = SWIG_NewPointerObj((void*)&it.Data(), typeInfo, 0);
        if (PyErr_Occurred())
          SWIG_fail;
        PyList_Append(obj, temp);
      }
      return obj;
    }
    fail:
    return NULL;
  }


#include "Ravl/Index.hh"


#include "Ravl/Index2d.hh"


#include "Ravl/IndexRange2d.hh"


#include "Ravl/Array2d.hh"

RavlN::ByteT &RavlN_Array2dClRavlN_ByteT_g_Access_____SWIG_0(RavlN::Array2dC<RavlN::ByteT > *self,RavlN::Index2dC const &index){ return self->operator[](index); }
RavlN::ByteT &RavlN_Array2dClRavlN_ByteT_g_Access_____SWIG_1(RavlN::Array2dC<RavlN::ByteT > *self,RavlN::IntT r,RavlN::IntT c){ return self->operator[](r)[c]; }
RavlN::ByteT &RavlN_Array2dClRavlN_ByteT_g_Access_____SWIG_2(RavlN::Array2dC<RavlN::ByteT > *self,RavlN::IndexC r,RavlN::IndexC c){ return self->operator[](r)[c]; }
RavlN::RealT &RavlN_Array2dClRavlN_RealT_g_Access_____SWIG_0(RavlN::Array2dC<RavlN::RealT > *self,RavlN::Index2dC const &index){ return self->operator[](index); }
RavlN::RealT &RavlN_Array2dClRavlN_RealT_g_Access_____SWIG_1(RavlN::Array2dC<RavlN::RealT > *self,RavlN::IntT r,RavlN::IntT c){ return self->operator[](r)[c]; }
RavlN::RealT &RavlN_Array2dClRavlN_RealT_g_Access_____SWIG_2(RavlN::Array2dC<RavlN::RealT > *self,RavlN::IndexC r,RavlN::IndexC c){ return self->operator[](r)[c]; }

#include "Ravl/String.hh"

char const *RavlN_StringC___str__(RavlN::StringC *self){
        return self->chars();
      }

#include "Ravl/IO.hh"
#include "Ravl/DP/PrintIOInfo.hh"
#include "Ravl/Stream.hh"



#include "Ravl/RealRange1d.hh"


#include "Ravl/RealRange2d.hh"


#include "Ravl/PointSet2d.hh"


#include "Ravl/Polygon2d.hh"


#include "Ravl/Image/Image.hh"
#include "Ravl/Image/ByteRGBValue.hh"
#include "Ravl/Image/RealRGBValue.hh"
#include "Ravl/Image/DrawPolygon.hh"

RavlImageN::ByteRGBValueC &RavlN_Array2dClRavlImageN_ByteRGBValueC_g_Access_____SWIG_0(RavlN::Array2dC<RavlImageN::ByteRGBValueC > *self,RavlN::Index2dC const &index){ return self->operator[](index); }
RavlImageN::ByteRGBValueC &RavlN_Array2dClRavlImageN_ByteRGBValueC_g_Access_____SWIG_1(RavlN::Array2dC<RavlImageN::ByteRGBValueC > *self,RavlN::IntT r,RavlN::IntT c){ return self->operator[](r)[c]; }
RavlImageN::ByteRGBValueC &RavlN_Array2dClRavlImageN_ByteRGBValueC_g_Access_____SWIG_2(RavlN::Array2dC<RavlImageN::ByteRGBValueC > *self,RavlN::IndexC r,RavlN::IndexC c){ return self->operator[](r)[c]; }
RavlImageN::RealRGBValueC &RavlN_Array2dClRavlImageN_RealRGBValueC_g_Access_____SWIG_0(RavlN::Array2dC<RavlImageN::RealRGBValueC > *self,RavlN::Index2dC const &index){ return self->operator[](index); }
RavlImageN::RealRGBValueC &RavlN_Array2dClRavlImageN_RealRGBValueC_g_Access_____SWIG_1(RavlN::Array2dC<RavlImageN::RealRGBValueC > *self,RavlN::IntT r,RavlN::IntT c){ return self->operator[](r)[c]; }
RavlImageN::RealRGBValueC &RavlN_Array2dClRavlImageN_RealRGBValueC_g_Access_____SWIG_2(RavlN::Array2dC<RavlImageN::RealRGBValueC > *self,RavlN::IndexC r,RavlN::IndexC c){ return self->operator[](r)[c]; }

#include "Ravl/Image/Font.hh"


#include "Ravl/SArray1d.hh"


#include "Ravl/Affine2d.hh"


#include "Ravl/OS/Date.hh"


#include "Ravl/Hash.hh"
#include "Ravl/HashIter.hh"


static PyObject* t_output_helper(PyObject* target, PyObject* o) {
    PyObject*   o2;
    PyObject*   o3;

    if (!target) {                   
        target = o;
    } else if (target == Py_None) {  
        Py_DECREF(Py_None);
        target = o;
    } else {                         
        if (!PyTuple_Check(target)) {
            o2 = target;
            target = PyTuple_New(1);
            PyTuple_SetItem(target, 0, o2);
        }
        o3 = PyTuple_New(1);            
        PyTuple_SetItem(o3, 0, o);      

        o2 = target;
        target = PySequence_Concat(o2, o3); 
        Py_DECREF(o2);                      
        Py_DECREF(o3);
    }
    return target;
}

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_new_DListRealC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListRealC")) goto fail;
    result = (RavlN::DListC<RavlN::RealT > *)new RavlN::DListC<RavlN::RealT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DListCTdouble_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_Empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealC_Empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Empty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_InsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::RealT *arg2 = 0 ;
    double temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListRealC_InsFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::RealT) PyFloat_AsDouble(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsFirst((RavlN::RealT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_InsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::RealT *arg2 = 0 ;
    double temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListRealC_InsLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::RealT) PyFloat_AsDouble(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsLast((RavlN::RealT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_PopFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealC_PopFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->PopFirst();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_PopLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealC_PopLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->PopLast();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_MoveFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::DListC<RavlN::RealT > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListRealC_MoveFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveFirst(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_MoveLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::DListC<RavlN::RealT > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListRealC_MoveLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveLast(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->First();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->Last();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::RealT *arg2 = 0 ;
    bool result;
    double temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListRealC_Del",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::RealT) PyFloat_AsDouble(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Del((RavlN::RealT const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    RavlN::RealT *arg2 = 0 ;
    bool result;
    double temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListRealC_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::RealT) PyFloat_AsDouble(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Contains((RavlN::RealT const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    int arg2 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListRealC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->Nth(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListRealC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = (RavlN::DListC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListRealC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListRealC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DListCTdouble_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DListRealIterC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListRealIterC")) goto fail;
    result = (RavlN::DLIterC<RavlN::RealT > *)new RavlN::DLIterC<RavlN::RealT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTdouble_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListRealIterC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > *arg1 = 0 ;
    RavlN::DLIterC<RavlN::RealT > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DListRealIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DLIterC<RavlN::RealT > *)new RavlN::DLIterC<RavlN::RealT >((RavlN::DListC<RavlN::RealT > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTdouble_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListRealIterC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_DListRealIterC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTdouble_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DListRealIterC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_DListRealIterC'");
    return NULL;
}


static PyObject *_wrap_DListRealIterC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::RealT > const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->First();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Last();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_IsElm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::RealT > const *)arg1)->IsElm();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_IsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_IsFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::RealT > const *)arg1)->IsFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_IsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_IsLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::RealT > const *)arg1)->IsLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_Prev(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Prev",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prev();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_NextCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_NextCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_PrevCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_PrevCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrevCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::IntT arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListRealIterC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Nth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_NextData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_NextData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->NextData();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_PrevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_PrevData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->PrevData();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_NextCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_NextCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->NextCrcData();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_PrevCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_PrevCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->PrevCrcData();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_Tail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::DListC<RavlN::RealT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Tail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Tail();
    
    {
        RavlN::DListC<RavlN::RealT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::RealT >((RavlN::DListC<RavlN::RealT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTdouble_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::DListC<RavlN::RealT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Head();
    
    {
        RavlN::DListC<RavlN::RealT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::RealT >((RavlN::DListC<RavlN::RealT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTdouble_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_InclusiveTail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::DListC<RavlN::RealT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_InclusiveTail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveTail();
    
    {
        RavlN::DListC<RavlN::RealT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::RealT >((RavlN::DListC<RavlN::RealT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTdouble_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_InclusiveHead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::DListC<RavlN::RealT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_InclusiveHead",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveHead();
    
    {
        RavlN::DListC<RavlN::RealT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::RealT >((RavlN::DListC<RavlN::RealT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTdouble_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC_Data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->Data();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListRealIterC___deref__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    RavlN::RealT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListRealIterC___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListRealIterC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::RealT > *arg1 = (RavlN::DLIterC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListRealIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListRealIterC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DLIterCTdouble_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ToList__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::RealT > arg1 ;
    PyObject *result;
    RavlN::DListC<RavlN::RealT > *argp1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__DListCTdouble_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PyObject *)ToList(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListIntC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListIntC")) goto fail;
    result = (RavlN::DListC<RavlN::IntT > *)new RavlN::DListC<RavlN::IntT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DListCTint_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_Empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntC_Empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Empty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_InsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::IntT *arg2 = 0 ;
    int temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListIntC_InsFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::IntT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsFirst((RavlN::IntT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_InsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::IntT *arg2 = 0 ;
    int temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListIntC_InsLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::IntT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsLast((RavlN::IntT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_PopFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntC_PopFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->PopFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_PopLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntC_PopLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->PopLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_MoveFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::DListC<RavlN::IntT > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListIntC_MoveFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveFirst(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_MoveLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::DListC<RavlN::IntT > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListIntC_MoveLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveLast(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->First();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->Last();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::IntT *arg2 = 0 ;
    bool result;
    int temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListIntC_Del",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::IntT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Del((RavlN::IntT const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    RavlN::IntT *arg2 = 0 ;
    bool result;
    int temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListIntC_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::IntT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Contains((RavlN::IntT const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    int arg2 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListIntC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->Nth(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListIntC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = (RavlN::DListC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListIntC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListIntC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DListCTint_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DListIntIterC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListIntIterC")) goto fail;
    result = (RavlN::DLIterC<RavlN::IntT > *)new RavlN::DLIterC<RavlN::IntT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTint_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListIntIterC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > *arg1 = 0 ;
    RavlN::DLIterC<RavlN::IntT > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DListIntIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DLIterC<RavlN::IntT > *)new RavlN::DLIterC<RavlN::IntT >((RavlN::DListC<RavlN::IntT > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTint_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListIntIterC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_DListIntIterC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTint_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DListIntIterC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_DListIntIterC'");
    return NULL;
}


static PyObject *_wrap_DListIntIterC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::IntT > const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->First();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Last();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_IsElm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::IntT > const *)arg1)->IsElm();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_IsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_IsFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::IntT > const *)arg1)->IsFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_IsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_IsLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::IntT > const *)arg1)->IsLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_Prev(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Prev",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prev();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_NextCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_NextCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_PrevCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_PrevCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrevCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::IntT arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListIntIterC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Nth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_NextData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_NextData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->NextData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_PrevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_PrevData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->PrevData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_NextCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_NextCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->NextCrcData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_PrevCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_PrevCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->PrevCrcData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_Tail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::DListC<RavlN::IntT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Tail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Tail();
    
    {
        RavlN::DListC<RavlN::IntT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::IntT >((RavlN::DListC<RavlN::IntT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTint_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::DListC<RavlN::IntT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Head();
    
    {
        RavlN::DListC<RavlN::IntT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::IntT >((RavlN::DListC<RavlN::IntT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTint_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_InclusiveTail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::DListC<RavlN::IntT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_InclusiveTail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveTail();
    
    {
        RavlN::DListC<RavlN::IntT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::IntT >((RavlN::DListC<RavlN::IntT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTint_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_InclusiveHead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::DListC<RavlN::IntT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_InclusiveHead",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveHead();
    
    {
        RavlN::DListC<RavlN::IntT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::IntT >((RavlN::DListC<RavlN::IntT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTint_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC_Data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)(arg1)->Data();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListIntIterC___deref__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    RavlN::IntT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListIntIterC___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__IntT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListIntIterC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::IntT > *arg1 = (RavlN::DLIterC<RavlN::IntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListIntIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTint_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListIntIterC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DLIterCTint_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ToList__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::IntT > arg1 ;
    PyObject *result;
    RavlN::DListC<RavlN::IntT > *argp1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__DListCTint_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PyObject *)ToList(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListUIntC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListUIntC")) goto fail;
    result = (RavlN::DListC<RavlN::UIntT > *)new RavlN::DListC<RavlN::UIntT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DListCTunsigned_int_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_Empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntC_Empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Empty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_InsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT *arg2 = 0 ;
    unsigned int temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_InsFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::UIntT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsFirst((RavlN::UIntT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_InsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT *arg2 = 0 ;
    unsigned int temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_InsLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::UIntT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsLast((RavlN::UIntT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_PopFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntC_PopFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->PopFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_PopLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntC_PopLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->PopLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_MoveFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::DListC<RavlN::UIntT > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_MoveFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveFirst(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_MoveLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::DListC<RavlN::UIntT > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_MoveLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveLast(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->First();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->Last();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT *arg2 = 0 ;
    bool result;
    unsigned int temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_Del",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::UIntT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Del((RavlN::UIntT const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT *arg2 = 0 ;
    bool result;
    unsigned int temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListUIntC_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::UIntT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Contains((RavlN::UIntT const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    int arg2 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListUIntC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->Nth(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListUIntC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = (RavlN::DListC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListUIntC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListUIntC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DListCTunsigned_int_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DListUIntIterC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListUIntIterC")) goto fail;
    result = (RavlN::DLIterC<RavlN::UIntT > *)new RavlN::DLIterC<RavlN::UIntT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListUIntIterC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > *arg1 = 0 ;
    RavlN::DLIterC<RavlN::UIntT > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DListUIntIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DLIterC<RavlN::UIntT > *)new RavlN::DLIterC<RavlN::UIntT >((RavlN::DListC<RavlN::UIntT > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListUIntIterC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_DListUIntIterC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTunsigned_int_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DListUIntIterC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_DListUIntIterC'");
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::UIntT > const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->First();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Last();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_IsElm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::UIntT > const *)arg1)->IsElm();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_IsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_IsFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::UIntT > const *)arg1)->IsFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_IsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_IsLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::UIntT > const *)arg1)->IsLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_Prev(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Prev",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prev();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_NextCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_NextCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_PrevCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_PrevCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrevCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::IntT arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListUIntIterC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Nth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_NextData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_NextData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->NextData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_PrevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_PrevData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->PrevData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_NextCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_NextCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->NextCrcData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_PrevCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_PrevCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->PrevCrcData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_Tail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::DListC<RavlN::UIntT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Tail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Tail();
    
    {
        RavlN::DListC<RavlN::UIntT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::UIntT >((RavlN::DListC<RavlN::UIntT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTunsigned_int_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::DListC<RavlN::UIntT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Head();
    
    {
        RavlN::DListC<RavlN::UIntT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::UIntT >((RavlN::DListC<RavlN::UIntT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTunsigned_int_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_InclusiveTail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::DListC<RavlN::UIntT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_InclusiveTail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveTail();
    
    {
        RavlN::DListC<RavlN::UIntT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::UIntT >((RavlN::DListC<RavlN::UIntT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTunsigned_int_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_InclusiveHead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::DListC<RavlN::UIntT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_InclusiveHead",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveHead();
    
    {
        RavlN::DListC<RavlN::UIntT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::UIntT >((RavlN::DListC<RavlN::UIntT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTunsigned_int_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC_Data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)(arg1)->Data();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListUIntIterC___deref__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    RavlN::UIntT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListUIntIterC___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__UIntT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListUIntIterC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::UIntT > *arg1 = (RavlN::DLIterC<RavlN::UIntT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListUIntIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListUIntIterC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DLIterCTunsigned_int_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ToList__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::UIntT > arg1 ;
    PyObject *result;
    RavlN::DListC<RavlN::UIntT > *argp1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__DListCTunsigned_int_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PyObject *)ToList(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListInt64C(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListInt64C")) goto fail;
    result = (RavlN::DListC<RavlN::Int64T > *)new RavlN::DListC<RavlN::Int64T >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DListCTlong_long_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_Empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64C_Empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Empty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_InsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    RavlN::Int64T temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_InsFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsFirst((RavlN::Int64T const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_InsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    RavlN::Int64T temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_InsLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsLast((RavlN::Int64T const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_PopFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64C_PopFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->PopFirst();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_PopLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64C_PopLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->PopLast();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_MoveFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::DListC<RavlN::Int64T > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_MoveFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveFirst(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_MoveLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::DListC<RavlN::Int64T > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_MoveLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveLast(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64C_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->First();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64C_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->Last();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    bool result;
    RavlN::Int64T temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_Del",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Del((RavlN::Int64T const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    bool result;
    RavlN::Int64T temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt64C_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Contains((RavlN::Int64T const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64C_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    int arg2 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListInt64C_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->Nth(arg2);
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListInt64C(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = (RavlN::DListC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListInt64C",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListInt64C_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DListCTlong_long_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DListInt64IterC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListInt64IterC")) goto fail;
    result = (RavlN::DLIterC<RavlN::Int64T > *)new RavlN::DLIterC<RavlN::Int64T >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTlong_long_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListInt64IterC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > *arg1 = 0 ;
    RavlN::DLIterC<RavlN::Int64T > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DListInt64IterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DLIterC<RavlN::Int64T > *)new RavlN::DLIterC<RavlN::Int64T >((RavlN::DListC<RavlN::Int64T > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTlong_long_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListInt64IterC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_DListInt64IterC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTlong_long_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DListInt64IterC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_DListInt64IterC'");
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Int64T > const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->First();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Last();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_IsElm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Int64T > const *)arg1)->IsElm();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_IsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_IsFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Int64T > const *)arg1)->IsFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_IsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_IsLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Int64T > const *)arg1)->IsLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_Prev(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Prev",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prev();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_NextCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_NextCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_PrevCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_PrevCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrevCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::IntT arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListInt64IterC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Nth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_NextData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_NextData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->NextData();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_PrevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_PrevData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->PrevData();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_NextCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_NextCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->NextCrcData();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_PrevCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_PrevCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->PrevCrcData();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_Tail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::DListC<RavlN::Int64T > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Tail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Tail();
    
    {
        RavlN::DListC<RavlN::Int64T > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Int64T >((RavlN::DListC<RavlN::Int64T > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTlong_long_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::DListC<RavlN::Int64T > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Head();
    
    {
        RavlN::DListC<RavlN::Int64T > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Int64T >((RavlN::DListC<RavlN::Int64T > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTlong_long_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_InclusiveTail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::DListC<RavlN::Int64T > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_InclusiveTail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveTail();
    
    {
        RavlN::DListC<RavlN::Int64T > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Int64T >((RavlN::DListC<RavlN::Int64T > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTlong_long_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_InclusiveHead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::DListC<RavlN::Int64T > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_InclusiveHead",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveHead();
    
    {
        RavlN::DListC<RavlN::Int64T > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Int64T >((RavlN::DListC<RavlN::Int64T > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTlong_long_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC_Data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T)(arg1)->Data();
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt64IterC___deref__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    RavlN::Int64T *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt64IterC___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int64T *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Int64T, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListInt64IterC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int64T > *arg1 = (RavlN::DLIterC<RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListInt64IterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTlong_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListInt64IterC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DLIterCTlong_long_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ToList__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int64T > arg1 ;
    PyObject *result;
    RavlN::DListC<RavlN::Int64T > *argp1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__DListCTlong_long_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PyObject *)ToList(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListInt16C(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListInt16C")) goto fail;
    result = (RavlN::DListC<RavlN::Int16T > *)new RavlN::DListC<RavlN::Int16T >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DListCTshort_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_Empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16C_Empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Empty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_InsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T *arg2 = 0 ;
    short temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_InsFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int16T) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsFirst((RavlN::Int16T const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_InsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T *arg2 = 0 ;
    short temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_InsLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int16T) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsLast((RavlN::Int16T const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_PopFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16C_PopFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->PopFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_PopLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16C_PopLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->PopLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_MoveFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::DListC<RavlN::Int16T > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_MoveFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveFirst(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_MoveLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::DListC<RavlN::Int16T > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_MoveLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveLast(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16C_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->First();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16C_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->Last();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T *arg2 = 0 ;
    bool result;
    short temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_Del",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int16T) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Del((RavlN::Int16T const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T *arg2 = 0 ;
    bool result;
    short temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListInt16C_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int16T) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Contains((RavlN::Int16T const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16C_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    int arg2 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListInt16C_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->Nth(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListInt16C(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = (RavlN::DListC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListInt16C",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListInt16C_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DListCTshort_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DListInt16IterC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListInt16IterC")) goto fail;
    result = (RavlN::DLIterC<RavlN::Int16T > *)new RavlN::DLIterC<RavlN::Int16T >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTshort_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListInt16IterC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > *arg1 = 0 ;
    RavlN::DLIterC<RavlN::Int16T > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DListInt16IterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DLIterC<RavlN::Int16T > *)new RavlN::DLIterC<RavlN::Int16T >((RavlN::DListC<RavlN::Int16T > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTshort_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListInt16IterC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_DListInt16IterC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTshort_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DListInt16IterC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_DListInt16IterC'");
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Int16T > const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->First();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Last();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_IsElm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Int16T > const *)arg1)->IsElm();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_IsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_IsFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Int16T > const *)arg1)->IsFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_IsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_IsLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Int16T > const *)arg1)->IsLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_Prev(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Prev",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prev();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_NextCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_NextCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_PrevCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_PrevCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrevCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::IntT arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListInt16IterC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Nth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_NextData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_NextData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->NextData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_PrevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_PrevData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->PrevData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_NextCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_NextCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->NextCrcData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_PrevCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_PrevCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->PrevCrcData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_Tail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::DListC<RavlN::Int16T > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Tail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Tail();
    
    {
        RavlN::DListC<RavlN::Int16T > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Int16T >((RavlN::DListC<RavlN::Int16T > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTshort_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::DListC<RavlN::Int16T > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Head();
    
    {
        RavlN::DListC<RavlN::Int16T > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Int16T >((RavlN::DListC<RavlN::Int16T > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTshort_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_InclusiveTail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::DListC<RavlN::Int16T > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_InclusiveTail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveTail();
    
    {
        RavlN::DListC<RavlN::Int16T > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Int16T >((RavlN::DListC<RavlN::Int16T > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTshort_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_InclusiveHead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::DListC<RavlN::Int16T > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_InclusiveHead",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveHead();
    
    {
        RavlN::DListC<RavlN::Int16T > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Int16T >((RavlN::DListC<RavlN::Int16T > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTshort_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC_Data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T)(arg1)->Data();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListInt16IterC___deref__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    RavlN::Int16T *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListInt16IterC___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Int16T *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Int16T, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListInt16IterC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Int16T > *arg1 = (RavlN::DLIterC<RavlN::Int16T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListInt16IterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTshort_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListInt16IterC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DLIterCTshort_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ToList__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Int16T > arg1 ;
    PyObject *result;
    RavlN::DListC<RavlN::Int16T > *argp1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__DListCTshort_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PyObject *)ToList(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListByteC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListByteC")) goto fail;
    result = (RavlN::DListC<RavlN::ByteT > *)new RavlN::DListC<RavlN::ByteT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DListCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_Empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteC_Empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Empty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_InsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT *arg2 = 0 ;
    unsigned char temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListByteC_InsFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::ByteT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsFirst((RavlN::ByteT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_InsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT *arg2 = 0 ;
    unsigned char temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListByteC_InsLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::ByteT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->InsLast((RavlN::ByteT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_PopFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteC_PopFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->PopFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_PopLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteC_PopLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->PopLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_MoveFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::DListC<RavlN::ByteT > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListByteC_MoveFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveFirst(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_MoveLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::DListC<RavlN::ByteT > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListByteC_MoveLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveLast(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->First();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->Last();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT *arg2 = 0 ;
    bool result;
    unsigned char temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListByteC_Del",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::ByteT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Del((RavlN::ByteT const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT *arg2 = 0 ;
    bool result;
    unsigned char temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListByteC_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::ByteT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)(arg1)->Contains((RavlN::ByteT const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    int arg2 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListByteC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->Nth(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListByteC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = (RavlN::DListC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListByteC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListByteC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DListCTunsigned_char_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DListByteIterC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListByteIterC")) goto fail;
    result = (RavlN::DLIterC<RavlN::ByteT > *)new RavlN::DLIterC<RavlN::ByteT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListByteIterC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > *arg1 = 0 ;
    RavlN::DLIterC<RavlN::ByteT > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DListByteIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DLIterC<RavlN::ByteT > *)new RavlN::DLIterC<RavlN::ByteT >((RavlN::DListC<RavlN::ByteT > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListByteIterC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_DListByteIterC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTunsigned_char_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DListByteIterC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_DListByteIterC'");
    return NULL;
}


static PyObject *_wrap_DListByteIterC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::ByteT > const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->First();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Last();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_IsElm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::ByteT > const *)arg1)->IsElm();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_IsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_IsFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::ByteT > const *)arg1)->IsFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_IsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_IsLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::ByteT > const *)arg1)->IsLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_Prev(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Prev",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prev();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_NextCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_NextCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_PrevCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_PrevCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrevCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::IntT arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListByteIterC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Nth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_NextData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_NextData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->NextData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_PrevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_PrevData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->PrevData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_NextCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_NextCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->NextCrcData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_PrevCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_PrevCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->PrevCrcData();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_Tail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::DListC<RavlN::ByteT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Tail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Tail();
    
    {
        RavlN::DListC<RavlN::ByteT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::ByteT >((RavlN::DListC<RavlN::ByteT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTunsigned_char_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::DListC<RavlN::ByteT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Head();
    
    {
        RavlN::DListC<RavlN::ByteT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::ByteT >((RavlN::DListC<RavlN::ByteT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTunsigned_char_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_InclusiveTail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::DListC<RavlN::ByteT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_InclusiveTail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveTail();
    
    {
        RavlN::DListC<RavlN::ByteT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::ByteT >((RavlN::DListC<RavlN::ByteT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTunsigned_char_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_InclusiveHead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::DListC<RavlN::ByteT > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_InclusiveHead",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveHead();
    
    {
        RavlN::DListC<RavlN::ByteT > * resultptr;
        resultptr = new RavlN::DListC<RavlN::ByteT >((RavlN::DListC<RavlN::ByteT > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTunsigned_char_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC_Data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT)(arg1)->Data();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListByteIterC___deref__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListByteIterC___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::ByteT *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__ByteT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListByteIterC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::ByteT > *arg1 = (RavlN::DLIterC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListByteIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListByteIterC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DLIterCTunsigned_char_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ToList__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::ByteT > arg1 ;
    PyObject *result;
    RavlN::DListC<RavlN::ByteT > *argp1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__DListCTunsigned_char_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PyObject *)ToList(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point2dC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Point2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Point2dC")) goto fail;
    result = (RavlN::Point2dC *)new RavlN::Point2dC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Point2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point2dC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealT arg1 ;
    RavlN::RealT arg2 ;
    RavlN::Point2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"dd:new_Point2dC",&arg1,&arg2)) goto fail;
    result = (RavlN::Point2dC *)new RavlN::Point2dC(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Point2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point2dC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Point2dC__SWIG_0(self,args);
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_Point2dC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Point2dC'");
    return NULL;
}


static PyObject *_wrap_Point2dC_Row(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Point2dC *arg1 = (RavlN::Point2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Point2dC_Row",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Point2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::Point2dC const *)arg1)->Row();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point2dC_Col(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Point2dC *arg1 = (RavlN::Point2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Point2dC_Col",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Point2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::Point2dC const *)arg1)->Col();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Point2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Point2dC *arg1 = (RavlN::Point2dC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Point2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Point2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Point2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__Point2dC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DListPoint2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListPoint2dC")) goto fail;
    result = (RavlN::DListC<RavlN::Point2dC > *)new RavlN::DListC<RavlN::Point2dC >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_Empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_Empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Empty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_InsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_InsFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Point2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->InsFirst((RavlN::Point2dC const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_InsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_InsLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Point2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->InsLast((RavlN::Point2dC const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_PopFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_PopFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->PopFirst();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_PopLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_PopLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->PopLast();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_MoveFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::DListC<RavlN::Point2dC > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_MoveFirst",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveFirst(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_MoveLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::DListC<RavlN::Point2dC > *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_MoveLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->MoveLast(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->First();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Last();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_Del",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Point2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Del((RavlN::Point2dC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DListPoint2dC_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Point2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Contains((RavlN::Point2dC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    int arg2 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListPoint2dC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Nth(arg2);
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListPoint2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = (RavlN::DListC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListPoint2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListPoint2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DListPoint2dIterC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DListPoint2dIterC")) goto fail;
    result = (RavlN::DLIterC<RavlN::Point2dC > *)new RavlN::DLIterC<RavlN::Point2dC >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListPoint2dIterC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > *arg1 = 0 ;
    RavlN::DLIterC<RavlN::Point2dC > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DListPoint2dIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DLIterC<RavlN::Point2dC > *)new RavlN::DLIterC<RavlN::Point2dC >((RavlN::DListC<RavlN::Point2dC > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DListPoint2dIterC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_DListPoint2dIterC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DListPoint2dIterC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_DListPoint2dIterC'");
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Point2dC > const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->First();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Last(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Last",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Last();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_IsElm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Point2dC > const *)arg1)->IsElm();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_IsFirst(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_IsFirst",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Point2dC > const *)arg1)->IsFirst();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_IsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_IsLast",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DLIterC<RavlN::Point2dC > const *)arg1)->IsLast();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Next();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Prev(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Prev",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Prev();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_NextCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_NextCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NextCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_PrevCrc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_PrevCrc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PrevCrc();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Nth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::IntT arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:DListPoint2dIterC_Nth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Nth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_NextData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_NextData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->NextData();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_PrevData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_PrevData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->PrevData();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_NextCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_NextCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->NextCrcData();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_PrevCrcData(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_PrevCrcData",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->PrevCrcData();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Tail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::DListC<RavlN::Point2dC > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Tail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Tail();
    
    {
        RavlN::DListC<RavlN::Point2dC > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Point2dC >((RavlN::DListC<RavlN::Point2dC > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::DListC<RavlN::Point2dC > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Head();
    
    {
        RavlN::DListC<RavlN::Point2dC > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Point2dC >((RavlN::DListC<RavlN::Point2dC > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_InclusiveTail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::DListC<RavlN::Point2dC > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_InclusiveTail",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveTail();
    
    {
        RavlN::DListC<RavlN::Point2dC > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Point2dC >((RavlN::DListC<RavlN::Point2dC > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_InclusiveHead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::DListC<RavlN::Point2dC > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_InclusiveHead",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->InclusiveHead();
    
    {
        RavlN::DListC<RavlN::Point2dC > * resultptr;
        resultptr = new RavlN::DListC<RavlN::Point2dC >((RavlN::DListC<RavlN::Point2dC > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Data(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Data();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC___deref__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::Point2dC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::Point2dC *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Point2dC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Row(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Row",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(*arg1)->Row();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DListPoint2dIterC_Col(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DListPoint2dIterC_Col",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(*arg1)->Col();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DListPoint2dIterC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DLIterC<RavlN::Point2dC > *arg1 = (RavlN::DLIterC<RavlN::Point2dC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DListPoint2dIterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DListPoint2dIterC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DLIterCTRavlN__Point2dC_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ToList__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DListC<RavlN::Point2dC > arg1 ;
    PyObject *result;
    RavlN::DListC<RavlN::Point2dC > *argp1 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ToList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (PyObject *)ToList(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ToList(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTdouble_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_ToList__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTint_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_ToList__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTunsigned_int_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_ToList__SWIG_2(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTlong_long_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_ToList__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTshort_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_ToList__SWIG_4(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTunsigned_char_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_ToList__SWIG_5(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DListCTRavlN__Point2dC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_ToList__SWIG_6(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'ToList'");
    return NULL;
}


static PyObject *_wrap_new_IndexC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_IndexC")) goto fail;
    result = (RavlN::IndexC *)new RavlN::IndexC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__IndexC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_IndexC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IntT arg1 ;
    RavlN::IndexC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:new_IndexC",&arg1)) goto fail;
    result = (RavlN::IndexC *)new RavlN::IndexC(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__IndexC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_IndexC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_IndexC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_IndexC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_IndexC'");
    return NULL;
}


static PyObject *_wrap_IndexC_V(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexC *arg1 = (RavlN::IndexC *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:IndexC_V",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlN::IndexC const *)arg1)->V();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_IndexC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexC *arg1 = (RavlN::IndexC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_IndexC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * IndexC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__IndexC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Index2dC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Index2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Index2dC")) goto fail;
    result = (RavlN::Index2dC *)new RavlN::Index2dC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Index2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Index2dC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IntT arg1 ;
    RavlN::IntT arg2 ;
    RavlN::Index2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:new_Index2dC",&arg1,&arg2)) goto fail;
    result = (RavlN::Index2dC *)new RavlN::Index2dC(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Index2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Index2dC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexC arg1 ;
    RavlN::IndexC arg2 ;
    RavlN::Index2dC *result;
    RavlN::IndexC *argp1 ;
    RavlN::IndexC *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_Index2dC",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (RavlN::Index2dC *)new RavlN::Index2dC(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Index2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Index2dC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Index2dC__SWIG_0(self,args);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_Index2dC__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_Index2dC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Index2dC'");
    return NULL;
}


static PyObject *_wrap_Index2dC_Row(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Index2dC *arg1 = (RavlN::Index2dC *) 0 ;
    RavlN::IndexC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Index2dC_Row",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::Index2dC const *)arg1)->Row();
    
    {
        RavlN::IndexC * resultptr;
        resultptr = new RavlN::IndexC((RavlN::IndexC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__IndexC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Index2dC_Col(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Index2dC *arg1 = (RavlN::Index2dC *) 0 ;
    RavlN::IndexC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Index2dC_Col",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::Index2dC const *)arg1)->Col();
    
    {
        RavlN::IndexC * resultptr;
        resultptr = new RavlN::IndexC((RavlN::IndexC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__IndexC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Index2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Index2dC *arg1 = (RavlN::Index2dC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Index2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Index2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__Index2dC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_IndexRange2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_IndexRange2dC")) goto fail;
    result = (RavlN::IndexRange2dC *)new RavlN::IndexRange2dC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__IndexRange2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndexRange2dC_Rows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_Rows",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlN::IndexRange2dC const *)arg1)->Rows();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndexRange2dC_Cols(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_Cols",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlN::IndexRange2dC const *)arg1)->Cols();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndexRange2dC_Area(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:IndexRange2dC_Area",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlN::IndexRange2dC const *)arg1)->Area();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndexRange2dC_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
    RavlN::Index2dC arg2 ;
    bool result;
    RavlN::Index2dC *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:IndexRange2dC_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)((RavlN::IndexRange2dC const *)arg1)->Contains(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndexRange2dC_Expand(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
    RavlN::IntT arg2 ;
    RavlN::IndexRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:IndexRange2dC_Expand",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::IndexRange2dC const *)arg1)->Expand(arg2);
    
    {
        RavlN::IndexRange2dC * resultptr;
        resultptr = new RavlN::IndexRange2dC((RavlN::IndexRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__IndexRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_IndexRange2dC_ClipBy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
    RavlN::IndexRange2dC arg2 ;
    RavlN::IndexRange2dC *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:IndexRange2dC_ClipBy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->ClipBy(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_IndexRange2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = (RavlN::IndexRange2dC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_IndexRange2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * IndexRange2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__IndexRange2dC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Array2dByteC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Array2dByteC")) goto fail;
    result = (RavlN::Array2dC<RavlN::ByteT > *)new RavlN::Array2dC<RavlN::ByteT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Array2dByteC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::SizeT arg1 ;
    RavlN::SizeT arg2 ;
    RavlN::Array2dC<RavlN::ByteT > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_Array2dByteC",&obj0,&obj1)) goto fail;
    arg1 = (RavlN::SizeT) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (RavlN::SizeT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (RavlN::Array2dC<RavlN::ByteT > *)new RavlN::Array2dC<RavlN::ByteT >(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Array2dByteC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = 0 ;
    RavlN::Array2dC<RavlN::ByteT > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Array2dByteC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::Array2dC<RavlN::ByteT > *)new RavlN::Array2dC<RavlN::ByteT >((RavlN::IndexRange2dC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Array2dByteC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Array2dByteC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Array2dByteC__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_Array2dByteC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Array2dByteC'");
    return NULL;
}


static PyObject *_wrap_Array2dByteC_Frame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *arg1 = (RavlN::Array2dC<RavlN::ByteT > *) 0 ;
    RavlN::IndexRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Array2dByteC_Frame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Frame();
    
    {
        RavlN::IndexRange2dC * resultptr;
        resultptr = new RavlN::IndexRange2dC((RavlN::IndexRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__IndexRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dByteC_Fill(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *arg1 = (RavlN::Array2dC<RavlN::ByteT > *) 0 ;
    RavlN::ByteT *arg2 = 0 ;
    unsigned char temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Array2dByteC_Fill",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::ByteT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->Fill((RavlN::ByteT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dByteC_Stride(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *arg1 = (RavlN::Array2dC<RavlN::ByteT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Array2dByteC_Stride",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlN::Array2dC<RavlN::ByteT > const *)arg1)->Stride();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dByteC_Access__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *arg1 = (RavlN::Array2dC<RavlN::ByteT > *) 0 ;
    RavlN::Index2dC *arg2 = 0 ;
    RavlN::ByteT *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Array2dByteC_Access",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlN::ByteT &_result_ref = RavlN_Array2dClRavlN_ByteT_g_Access_____SWIG_0(arg1,(RavlN::Index2dC const &)*arg2);
        result = (RavlN::ByteT *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__ByteT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dByteC_Access__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *arg1 = (RavlN::Array2dC<RavlN::ByteT > *) 0 ;
    RavlN::IntT arg2 ;
    RavlN::IntT arg3 ;
    RavlN::ByteT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:Array2dByteC_Access",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::ByteT &_result_ref = RavlN_Array2dClRavlN_ByteT_g_Access_____SWIG_1(arg1,arg2,arg3);
        result = (RavlN::ByteT *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__ByteT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dByteC_Access__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *arg1 = (RavlN::Array2dC<RavlN::ByteT > *) 0 ;
    RavlN::IndexC arg2 ;
    RavlN::IndexC arg3 ;
    RavlN::ByteT *result;
    RavlN::IndexC *argp2 ;
    RavlN::IndexC *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Array2dByteC_Access",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        RavlN::ByteT &_result_ref = RavlN_Array2dClRavlN_ByteT_g_Access_____SWIG_2(arg1,arg2,arg3);
        result = (RavlN::ByteT *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__ByteT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dByteC_Access(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__Index2dC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Array2dByteC_Access__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Array2dByteC_Access__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Array2dByteC_Access__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Array2dByteC_Access'");
    return NULL;
}


static PyObject *_wrap_delete_Array2dByteC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *arg1 = (RavlN::Array2dC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Array2dByteC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Array2dByteC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Array2dRealC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::RealT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Array2dRealC")) goto fail;
    result = (RavlN::Array2dC<RavlN::RealT > *)new RavlN::Array2dC<RavlN::RealT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTdouble_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Array2dRealC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::SizeT arg1 ;
    RavlN::SizeT arg2 ;
    RavlN::Array2dC<RavlN::RealT > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_Array2dRealC",&obj0,&obj1)) goto fail;
    arg1 = (RavlN::SizeT) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (RavlN::SizeT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (RavlN::Array2dC<RavlN::RealT > *)new RavlN::Array2dC<RavlN::RealT >(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTdouble_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Array2dRealC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = 0 ;
    RavlN::Array2dC<RavlN::RealT > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Array2dRealC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::Array2dC<RavlN::RealT > *)new RavlN::Array2dC<RavlN::RealT >((RavlN::IndexRange2dC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTdouble_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Array2dRealC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Array2dRealC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Array2dRealC__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_Array2dRealC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Array2dRealC'");
    return NULL;
}


static PyObject *_wrap_Array2dRealC_Frame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::RealT > *arg1 = (RavlN::Array2dC<RavlN::RealT > *) 0 ;
    RavlN::IndexRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Array2dRealC_Frame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Frame();
    
    {
        RavlN::IndexRange2dC * resultptr;
        resultptr = new RavlN::IndexRange2dC((RavlN::IndexRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__IndexRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dRealC_Fill(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::RealT > *arg1 = (RavlN::Array2dC<RavlN::RealT > *) 0 ;
    RavlN::RealT *arg2 = 0 ;
    double temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Array2dRealC_Fill",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::RealT) PyFloat_AsDouble(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    (arg1)->Fill((RavlN::RealT const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dRealC_Stride(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::RealT > *arg1 = (RavlN::Array2dC<RavlN::RealT > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Array2dRealC_Stride",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlN::Array2dC<RavlN::RealT > const *)arg1)->Stride();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dRealC_Access__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::RealT > *arg1 = (RavlN::Array2dC<RavlN::RealT > *) 0 ;
    RavlN::Index2dC *arg2 = 0 ;
    RavlN::RealT *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Array2dRealC_Access",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlN::RealT &_result_ref = RavlN_Array2dClRavlN_RealT_g_Access_____SWIG_0(arg1,(RavlN::Index2dC const &)*arg2);
        result = (RavlN::RealT *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dRealC_Access__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::RealT > *arg1 = (RavlN::Array2dC<RavlN::RealT > *) 0 ;
    RavlN::IntT arg2 ;
    RavlN::IntT arg3 ;
    RavlN::RealT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:Array2dRealC_Access",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealT &_result_ref = RavlN_Array2dClRavlN_RealT_g_Access_____SWIG_1(arg1,arg2,arg3);
        result = (RavlN::RealT *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dRealC_Access__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::RealT > *arg1 = (RavlN::Array2dC<RavlN::RealT > *) 0 ;
    RavlN::IndexC arg2 ;
    RavlN::IndexC arg3 ;
    RavlN::RealT *result;
    RavlN::IndexC *argp2 ;
    RavlN::IndexC *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Array2dRealC_Access",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        RavlN::RealT &_result_ref = RavlN_Array2dClRavlN_RealT_g_Access_____SWIG_2(arg1,arg2,arg3);
        result = (RavlN::RealT *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Array2dRealC_Access(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTdouble_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__Index2dC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Array2dRealC_Access__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTdouble_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Array2dRealC_Access__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTdouble_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Array2dRealC_Access__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Array2dRealC_Access'");
    return NULL;
}


static PyObject *_wrap_delete_Array2dRealC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::RealT > *arg1 = (RavlN::Array2dC<RavlN::RealT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Array2dRealC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Array2dRealC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__Array2dCTdouble_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_StringC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_StringC")) goto fail;
    result = (RavlN::StringC *)new RavlN::StringC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__StringC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_StringC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    RavlN::StringC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:new_StringC",&arg1)) goto fail;
    result = (RavlN::StringC *)new RavlN::StringC((char const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__StringC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_StringC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_StringC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_StringC__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_StringC'");
    return NULL;
}


static PyObject *_wrap_StringC_IsEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:StringC_IsEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::StringC const *)arg1)->IsEmpty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StringC_chars(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:StringC_chars",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((RavlN::StringC const *)arg1)->chars();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StringC_Size(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:StringC_Size",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlN::StringC const *)arg1)->Size();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_StringC___str__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:StringC___str__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)RavlN_StringC___str__(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_StringC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC *arg1 = (RavlN::StringC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_StringC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * StringC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__StringC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_PrintIOFormats(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream &arg1_defvalue = std::cout ;
    std::ostream *arg1 = (std::ostream *) &arg1_defvalue ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:PrintIOFormats",&obj0)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg1 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    RavlN::PrintIOFormats(*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PrintIOConversions(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream &arg1_defvalue = std::cout ;
    std::ostream *arg1 = (std::ostream *) &arg1_defvalue ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:PrintIOConversions",&obj0)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg1 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    RavlN::PrintIOConversions(*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PrintIOClassTypes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::ostream &arg1_defvalue = std::cout ;
    std::ostream *arg1 = (std::ostream *) &arg1_defvalue ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:PrintIOClassTypes",&obj0)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
        if (arg1 == NULL) {
            PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
        }
    }
    RavlN::PrintIOClassTypes(*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRangeC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealT arg1 = (RavlN::RealT) 0 ;
    RavlN::RealRangeC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"|d:new_RealRangeC",&arg1)) goto fail;
    result = (RavlN::RealRangeC *)new RavlN::RealRangeC(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRangeC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealT arg1 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"dd:new_RealRangeC",&arg1,&arg2)) goto fail;
    result = (RavlN::RealRangeC *)new RavlN::RealRangeC(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRangeC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 0) && (argc <= 1)) {
        int _v;
        if (argc <= 0) {
            return _wrap_new_RealRangeC__SWIG_0(self,args);
        }
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_RealRangeC__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_RealRangeC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_RealRangeC'");
    return NULL;
}


static PyObject *_wrap_RealRangeC_Size(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Size",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRangeC const *)arg1)->Size();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Range(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Range",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealRangeC const &_result_ref = ((RavlN::RealRangeC const *)arg1)->Range();
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Min__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Min",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealT const &_result_ref = ((RavlN::RealRangeC const *)arg1)->Min();
        result = (RavlN::RealT *) &_result_ref;
    }
    
    resultobj = PyFloat_FromDouble((double) *(result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Max__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Max",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealT const &_result_ref = ((RavlN::RealRangeC const *)arg1)->Max();
        result = (RavlN::RealT *) &_result_ref;
    }
    
    resultobj = PyFloat_FromDouble((double) *(result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Min__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Min",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealT &_result_ref = (arg1)->Min();
        result = (RavlN::RealT *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Min(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRangeC_Min__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRangeC_Min__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRangeC_Min'");
    return NULL;
}


static PyObject *_wrap_RealRangeC_Max__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Max",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealT &_result_ref = (arg1)->Max();
        result = (RavlN::RealT *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealT, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Max(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRangeC_Max__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRangeC_Max__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRangeC_Max'");
    return NULL;
}


static PyObject *_wrap_RealRangeC_Center(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_Center",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRangeC const *)arg1)->Center();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_CenterD(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_CenterD",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRangeC const *)arg1)->CenterD();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Percentage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC_Percentage",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRangeC const *)arg1)->Percentage(arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_IsEmpty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_IsEmpty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::RealRangeC const *)arg1)->IsEmpty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::RealRangeC const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Contains__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC_Contains",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::RealRangeC const *)arg1)->Contains(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Contains__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRangeC const *)arg1)->Contains((RavlN::RealRangeC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Contains(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_RealRangeC_Contains__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_RealRangeC_Contains__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRangeC_Contains'");
    return NULL;
}


static PyObject *_wrap_RealRangeC___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRangeC const *)arg1)->operator ==((RavlN::RealRangeC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRangeC const *)arg1)->operator !=((RavlN::RealRangeC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_In(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_In",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRangeC const *)arg1)->In((RavlN::RealRangeC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_IsOverlapping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_IsOverlapping",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRangeC const *)arg1)->IsOverlapping((RavlN::RealRangeC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_SetOrigin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC_SetOrigin",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealRangeC const &_result_ref = (arg1)->SetOrigin(arg2);
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC___iadd__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC___iadd__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealRangeC const &_result_ref = (arg1)->operator +=(arg2);
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC___isub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC___isub__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealRangeC const &_result_ref = (arg1)->operator -=(arg2);
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC___add__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRangeC const *)arg1)->operator +(arg2);
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC___sub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC___sub__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRangeC const *)arg1)->operator -(arg2);
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_ClipBy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_ClipBy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlN::RealRangeC &_result_ref = (arg1)->ClipBy((RavlN::RealRangeC const &)*arg2);
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Clip(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT *arg2 = 0 ;
    RavlN::RealT result;
    double temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Clip",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::RealT) PyFloat_AsDouble(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (RavlN::RealT)(arg1)->Clip((RavlN::RealT const &)*arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_FirstHalf(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_FirstHalf",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRangeC const *)arg1)->FirstHalf();
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_FirstHalfD(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRangeC_FirstHalfD",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRangeC const *)arg1)->FirstHalfD();
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Enlarge(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC_Enlarge",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRangeC const *)arg1)->Enlarge(arg2);
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Expand(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC_Expand",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRangeC const *)arg1)->Expand(arg2);
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Shrink(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC_Shrink",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRangeC const *)arg1)->Shrink(arg2);
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_ShrinkHigh(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC_ShrinkHigh",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealRangeC &_result_ref = (arg1)->ShrinkHigh(arg2);
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Swap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Swap",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlN::RealRangeC &_result_ref = (arg1)->Swap(*arg2);
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Involve__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRangeC_Involve",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::RealRangeC const &_result_ref = (arg1)->Involve(arg2);
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Involve__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    RavlN::RealRangeC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRangeC_Involve",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlN::RealRangeC const &_result_ref = (arg1)->Involve((RavlN::RealRangeC const &)*arg2);
        result = (RavlN::RealRangeC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRangeC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRangeC_Involve(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_RealRangeC_Involve__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_RealRangeC_Involve__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRangeC_Involve'");
    return NULL;
}


static PyObject *_wrap_delete_RealRangeC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = (RavlN::RealRangeC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RealRangeC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RealRangeC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__RealRangeC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RealRange2dC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_RealRange2dC")) goto fail;
    result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRange2dC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealT arg1 ;
    RavlN::RealT arg2 ;
    RavlN::RealRange2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"dd:new_RealRange2dC",&arg1,&arg2)) goto fail;
    result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRange2dC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRangeC *arg1 = 0 ;
    RavlN::RealRangeC *arg2 = 0 ;
    RavlN::RealRange2dC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_RealRange2dC",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRangeC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC((RavlN::RealRangeC const &)*arg1,(RavlN::RealRangeC const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRange2dC__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = 0 ;
    RavlN::RealRange2dC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RealRange2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC((RavlN::RealRange2dC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRange2dC__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealT arg1 ;
    RavlN::RealT arg2 ;
    RavlN::RealT arg3 ;
    RavlN::RealT arg4 ;
    RavlN::RealRange2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"dddd:new_RealRange2dC",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (RavlN::RealRange2dC *)new RavlN::RealRange2dC(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRange2dC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_RealRange2dC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_RealRange2dC__SWIG_3(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__RealRangeC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_RealRange2dC__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_RealRange2dC__SWIG_1(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyFloat_Check(argv[3]) || PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_new_RealRange2dC__SWIG_4(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_RealRange2dC'");
    return NULL;
}


static PyObject *_wrap_RealRange2dC_TRow__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_TRow",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->TRow();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_LCol__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_LCol",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->LCol();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_BRow__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_BRow",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->BRow();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_RCol__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_RCol",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->RCol();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_TRow__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_TRow",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->TRow();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_TRow(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRange2dC_TRow__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRange2dC_TRow__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRange2dC_TRow'");
    return NULL;
}


static PyObject *_wrap_RealRange2dC_LCol__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_LCol",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->LCol();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_LCol(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRange2dC_LCol__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRange2dC_LCol__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRange2dC_LCol'");
    return NULL;
}


static PyObject *_wrap_RealRange2dC_BRow__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_BRow",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->BRow();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_BRow(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRange2dC_BRow__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRange2dC_BRow__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRange2dC_BRow'");
    return NULL;
}


static PyObject *_wrap_RealRange2dC_RCol__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_RCol",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)(arg1)->RCol();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_RCol(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRange2dC_RCol__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__RealRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_RealRange2dC_RCol__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRange2dC_RCol'");
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Rows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Rows",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->Rows();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Cols(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Cols",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->Cols();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Area(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Area",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlN::RealRange2dC const *)arg1)->Area();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Dilate(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Dilate",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRange2dC const *)arg1)->Dilate();
    
    {
        RavlN::RealRange2dC * resultptr;
        resultptr = new RavlN::RealRange2dC((RavlN::RealRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Erode(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Erode",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRange2dC const *)arg1)->Erode();
    
    {
        RavlN::RealRange2dC * resultptr;
        resultptr = new RavlN::RealRange2dC((RavlN::RealRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Expand(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRange2dC_Expand",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Expand(arg2);
    
    {
        RavlN::RealRange2dC * resultptr;
        resultptr = new RavlN::RealRange2dC((RavlN::RealRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Shrink(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealT arg2 ;
    RavlN::RealRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:RealRange2dC_Shrink",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::RealRange2dC const *)arg1)->Shrink(arg2);
    
    {
        RavlN::RealRange2dC * resultptr;
        resultptr = new RavlN::RealRange2dC((RavlN::RealRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_ClipBy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRange2dC *arg2 = 0 ;
    RavlN::RealRange2dC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_ClipBy",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlN::RealRange2dC &_result_ref = (arg1)->ClipBy((RavlN::RealRange2dC const &)*arg2);
        result = (RavlN::RealRange2dC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__RealRange2dC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Contains(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRange2dC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_Contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRange2dC const *)arg1)->Contains((RavlN::RealRange2dC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_RowRange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_RowRange",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->RowRange();
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_ColRange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_ColRange",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->ColRange();
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Range1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Range1",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Range1();
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Range2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRangeC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_Range2",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Range2();
    
    {
        RavlN::RealRangeC * resultptr;
        resultptr = new RavlN::RealRangeC((RavlN::RealRangeC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRangeC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_Involve(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRange2dC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_Involve",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Involve((RavlN::RealRange2dC const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRange2dC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::RealRange2dC const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRange2dC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRange2dC const *)arg1)->operator ==((RavlN::RealRange2dC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRange2dC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRange2dC const *)arg1)->operator !=((RavlN::RealRange2dC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRange2dC_IsOverlapping(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    RavlN::RealRange2dC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRange2dC_IsOverlapping",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::RealRange2dC const *)arg1)->IsOverlapping((RavlN::RealRange2dC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_RealRange2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealRange2dC *arg1 = (RavlN::RealRange2dC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RealRange2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__RealRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RealRange2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__RealRange2dC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PointSet2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::PointSet2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_PointSet2dC")) goto fail;
    result = (RavlN::PointSet2dC *)new RavlN::PointSet2dC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__PointSet2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PointSet2dC_Centroid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::PointSet2dC *arg1 = (RavlN::PointSet2dC *) 0 ;
    RavlN::Point2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:PointSet2dC_Centroid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__PointSet2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::PointSet2dC const *)arg1)->Centroid();
    
    {
        RavlN::Point2dC * resultptr;
        resultptr = new RavlN::Point2dC((RavlN::Point2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Point2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PointSet2dC_BoundingRectangle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::PointSet2dC *arg1 = (RavlN::PointSet2dC *) 0 ;
    RavlN::RealRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:PointSet2dC_BoundingRectangle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__PointSet2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::PointSet2dC const *)arg1)->BoundingRectangle();
    
    {
        RavlN::RealRange2dC * resultptr;
        resultptr = new RavlN::RealRange2dC((RavlN::RealRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__RealRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PointSet2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::PointSet2dC *arg1 = (RavlN::PointSet2dC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_PointSet2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__PointSet2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PointSet2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__PointSet2dC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Polygon2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Polygon2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Polygon2dC")) goto fail;
    result = (RavlN::Polygon2dC *)new RavlN::Polygon2dC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Polygon2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Polygon2dC_InsLast(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Polygon2dC *arg1 = (RavlN::Polygon2dC *) 0 ;
    RavlN::Point2dC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Polygon2dC_InsLast",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Polygon2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Point2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->InsLast(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Polygon2dC_Size(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Polygon2dC *arg1 = (RavlN::Polygon2dC *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Polygon2dC_Size",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Polygon2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlN::Polygon2dC const *)arg1)->Size();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Polygon2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Polygon2dC *arg1 = (RavlN::Polygon2dC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Polygon2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Polygon2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Polygon2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__Polygon2dC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ByteRGBArray2dC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_ByteRGBArray2dC")) goto fail;
    result = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *)new RavlN::Array2dC<RavlImageN::ByteRGBValueC >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ByteRGBArray2dC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::SizeT arg1 ;
    RavlN::SizeT arg2 ;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ByteRGBArray2dC",&obj0,&obj1)) goto fail;
    arg1 = (RavlN::SizeT) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (RavlN::SizeT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *)new RavlN::Array2dC<RavlImageN::ByteRGBValueC >(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ByteRGBArray2dC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = 0 ;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ByteRGBArray2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *)new RavlN::Array2dC<RavlImageN::ByteRGBValueC >((RavlN::IndexRange2dC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ByteRGBArray2dC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_ByteRGBArray2dC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_ByteRGBArray2dC__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_ByteRGBArray2dC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_ByteRGBArray2dC'");
    return NULL;
}


static PyObject *_wrap_ByteRGBArray2dC_Frame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::IndexRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ByteRGBArray2dC_Frame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Frame();
    
    {
        RavlN::IndexRange2dC * resultptr;
        resultptr = new RavlN::IndexRange2dC((RavlN::IndexRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__IndexRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBArray2dC_Fill(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlImageN::ByteRGBValueC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ByteRGBArray2dC_Fill",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Fill((RavlImageN::ByteRGBValueC const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBArray2dC_Stride(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ByteRGBArray2dC_Stride",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlN::Array2dC<RavlImageN::ByteRGBValueC > const *)arg1)->Stride();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBArray2dC_Access__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::Index2dC *arg2 = 0 ;
    RavlImageN::ByteRGBValueC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ByteRGBArray2dC_Access",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlImageN::ByteRGBValueC &_result_ref = RavlN_Array2dClRavlImageN_ByteRGBValueC_g_Access_____SWIG_0(arg1,(RavlN::Index2dC const &)*arg2);
        result = (RavlImageN::ByteRGBValueC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBArray2dC_Access__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::IntT arg2 ;
    RavlN::IntT arg3 ;
    RavlImageN::ByteRGBValueC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:ByteRGBArray2dC_Access",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlImageN::ByteRGBValueC &_result_ref = RavlN_Array2dClRavlImageN_ByteRGBValueC_g_Access_____SWIG_1(arg1,arg2,arg3);
        result = (RavlImageN::ByteRGBValueC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBArray2dC_Access__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::IndexC arg2 ;
    RavlN::IndexC arg3 ;
    RavlImageN::ByteRGBValueC *result;
    RavlN::IndexC *argp2 ;
    RavlN::IndexC *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:ByteRGBArray2dC_Access",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        RavlImageN::ByteRGBValueC &_result_ref = RavlN_Array2dClRavlImageN_ByteRGBValueC_g_Access_____SWIG_2(arg1,arg2,arg3);
        result = (RavlImageN::ByteRGBValueC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBArray2dC_Access(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__Index2dC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_ByteRGBArray2dC_Access__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_ByteRGBArray2dC_Access__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_ByteRGBArray2dC_Access__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'ByteRGBArray2dC_Access'");
    return NULL;
}


static PyObject *_wrap_delete_ByteRGBArray2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::ByteRGBValueC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ByteRGBArray2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ByteRGBArray2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RealRGBArray2dC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_RealRGBArray2dC")) goto fail;
    result = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *)new RavlN::Array2dC<RavlImageN::RealRGBValueC >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRGBArray2dC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::SizeT arg1 ;
    RavlN::SizeT arg2 ;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_RealRGBArray2dC",&obj0,&obj1)) goto fail;
    arg1 = (RavlN::SizeT) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (RavlN::SizeT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *)new RavlN::Array2dC<RavlImageN::RealRGBValueC >(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRGBArray2dC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = 0 ;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_RealRGBArray2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *)new RavlN::Array2dC<RavlImageN::RealRGBValueC >((RavlN::IndexRange2dC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_RealRGBArray2dC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_RealRGBArray2dC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_RealRGBArray2dC__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_RealRGBArray2dC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_RealRGBArray2dC'");
    return NULL;
}


static PyObject *_wrap_RealRGBArray2dC_Frame(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *) 0 ;
    RavlN::IndexRange2dC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRGBArray2dC_Frame",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Frame();
    
    {
        RavlN::IndexRange2dC * resultptr;
        resultptr = new RavlN::IndexRange2dC((RavlN::IndexRange2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__IndexRange2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBArray2dC_Fill(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *) 0 ;
    RavlImageN::RealRGBValueC *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRGBArray2dC_Fill",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__RealRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Fill((RavlImageN::RealRGBValueC const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBArray2dC_Stride(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRGBArray2dC_Stride",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlN::Array2dC<RavlImageN::RealRGBValueC > const *)arg1)->Stride();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBArray2dC_Access__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *) 0 ;
    RavlN::Index2dC *arg2 = 0 ;
    RavlImageN::RealRGBValueC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:RealRGBArray2dC_Access",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlImageN::RealRGBValueC &_result_ref = RavlN_Array2dClRavlImageN_RealRGBValueC_g_Access_____SWIG_0(arg1,(RavlN::Index2dC const &)*arg2);
        result = (RavlImageN::RealRGBValueC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__RealRGBValueC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBArray2dC_Access__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *) 0 ;
    RavlN::IntT arg2 ;
    RavlN::IntT arg3 ;
    RavlImageN::RealRGBValueC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:RealRGBArray2dC_Access",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlImageN::RealRGBValueC &_result_ref = RavlN_Array2dClRavlImageN_RealRGBValueC_g_Access_____SWIG_1(arg1,arg2,arg3);
        result = (RavlImageN::RealRGBValueC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__RealRGBValueC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBArray2dC_Access__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *) 0 ;
    RavlN::IndexC arg2 ;
    RavlN::IndexC arg3 ;
    RavlImageN::RealRGBValueC *result;
    RavlN::IndexC *argp2 ;
    RavlN::IndexC *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:RealRGBArray2dC_Access",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_RavlN__IndexC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    {
        RavlImageN::RealRGBValueC &_result_ref = RavlN_Array2dClRavlImageN_RealRGBValueC_g_Access_____SWIG_2(arg1,arg2,arg3);
        result = (RavlImageN::RealRGBValueC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__RealRGBValueC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBArray2dC_Access(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__Index2dC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_RealRGBArray2dC_Access__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__IndexC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_RealRGBArray2dC_Access__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_RealRGBArray2dC_Access__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'RealRGBArray2dC_Access'");
    return NULL;
}


static PyObject *_wrap_delete_RealRGBArray2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::RealRGBValueC > *arg1 = (RavlN::Array2dC<RavlImageN::RealRGBValueC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RealRGBArray2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RealRGBArray2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_RealRGBValueC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealT arg1 ;
    RavlN::RealT arg2 ;
    RavlN::RealT arg3 ;
    RavlImageN::RealRGBValueC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ddd:new_RealRGBValueC",&arg1,&arg2,&arg3)) goto fail;
    result = (RavlImageN::RealRGBValueC *)new RavlImageN::RealRGBValueC(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__RealRGBValueC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBValueC_Red(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::RealRGBValueC *arg1 = (RavlImageN::RealRGBValueC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRGBValueC_Red",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__RealRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlImageN::RealRGBValueC const *)arg1)->Red();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBValueC_Green(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::RealRGBValueC *arg1 = (RavlImageN::RealRGBValueC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRGBValueC_Green",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__RealRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlImageN::RealRGBValueC const *)arg1)->Green();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_RealRGBValueC_Blue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::RealRGBValueC *arg1 = (RavlImageN::RealRGBValueC *) 0 ;
    RavlN::RealT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:RealRGBValueC_Blue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__RealRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::RealT)((RavlImageN::RealRGBValueC const *)arg1)->Blue();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_RealRGBValueC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::RealRGBValueC *arg1 = (RavlImageN::RealRGBValueC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_RealRGBValueC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__RealRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * RealRGBValueC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlImageN__RealRGBValueC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ByteRGBValueC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IntT arg1 ;
    RavlN::IntT arg2 ;
    RavlN::IntT arg3 ;
    RavlImageN::ByteRGBValueC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"iii:new_ByteRGBValueC",&arg1,&arg2,&arg3)) goto fail;
    result = (RavlImageN::ByteRGBValueC *)new RavlImageN::ByteRGBValueC(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBValueC_Red(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ByteRGBValueC *arg1 = (RavlImageN::ByteRGBValueC *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ByteRGBValueC_Red",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ByteRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlImageN::ByteRGBValueC const *)arg1)->Red();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBValueC_Green(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ByteRGBValueC *arg1 = (RavlImageN::ByteRGBValueC *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ByteRGBValueC_Green",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ByteRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlImageN::ByteRGBValueC const *)arg1)->Green();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBValueC_Blue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ByteRGBValueC *arg1 = (RavlImageN::ByteRGBValueC *) 0 ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ByteRGBValueC_Blue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ByteRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::IntT)((RavlImageN::ByteRGBValueC const *)arg1)->Blue();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ByteRGBValueC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ByteRGBValueC *arg1 = (RavlImageN::ByteRGBValueC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ByteRGBValueC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ByteRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ByteRGBValueC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlImageN__ByteRGBValueC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ImageByteRGBValueC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_ImageByteRGBValueC")) goto fail;
    result = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC<RavlImageN::ByteRGBValueC >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageByteRGBValueC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::SizeT arg1 ;
    RavlN::SizeT arg2 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ImageByteRGBValueC",&obj0,&obj1)) goto fail;
    arg1 = (RavlN::SizeT) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (RavlN::SizeT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC<RavlImageN::ByteRGBValueC >(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageByteRGBValueC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = 0 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ImageByteRGBValueC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC<RavlImageN::ByteRGBValueC >((RavlN::IndexRange2dC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageByteRGBValueC__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg1 = 0 ;
    RavlN::IndexRange2dC *arg2 = 0 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ImageByteRGBValueC",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC<RavlImageN::ByteRGBValueC >((RavlImageN::ImageC<RavlImageN::ByteRGBValueC > const &)*arg1,(RavlN::IndexRange2dC const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageByteRGBValueC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_ImageByteRGBValueC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_ImageByteRGBValueC__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_ImageByteRGBValueC__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_ImageByteRGBValueC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_ImageByteRGBValueC'");
    return NULL;
}


static PyObject *_wrap_ImageByteRGBValueC_Rows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ImageByteRGBValueC_Rows",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlImageN::ImageC<RavlImageN::ByteRGBValueC > const *)arg1)->Rows();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageByteRGBValueC_Cols(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ImageByteRGBValueC_Cols",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlImageN::ImageC<RavlImageN::ByteRGBValueC > const *)arg1)->Cols();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ImageByteRGBValueC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ImageByteRGBValueC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ImageByteRGBValueC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ByteRGBImageC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_ByteRGBImageC")) goto fail;
    result = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC<RavlImageN::ByteRGBValueC >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ByteRGBImageC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::SizeT arg1 ;
    RavlN::SizeT arg2 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ByteRGBImageC",&obj0,&obj1)) goto fail;
    arg1 = (RavlN::SizeT) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (RavlN::SizeT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC<RavlImageN::ByteRGBValueC >(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ByteRGBImageC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = 0 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ByteRGBImageC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC<RavlImageN::ByteRGBValueC >((RavlN::IndexRange2dC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ByteRGBImageC__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg1 = 0 ;
    RavlN::IndexRange2dC *arg2 = 0 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ByteRGBImageC",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *)new RavlImageN::ImageC<RavlImageN::ByteRGBValueC >((RavlImageN::ImageC<RavlImageN::ByteRGBValueC > const &)*arg1,(RavlN::IndexRange2dC const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ByteRGBImageC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_ByteRGBImageC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_ByteRGBImageC__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_ByteRGBImageC__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_ByteRGBImageC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_ByteRGBImageC'");
    return NULL;
}


static PyObject *_wrap_ByteRGBImageC_Rows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ByteRGBImageC_Rows",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlImageN::ImageC<RavlImageN::ByteRGBValueC > const *)arg1)->Rows();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ByteRGBImageC_Cols(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ByteRGBImageC_Cols",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlImageN::ImageC<RavlImageN::ByteRGBValueC > const *)arg1)->Cols();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ByteRGBImageC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg1 = (RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ByteRGBImageC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ByteRGBImageC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ImageByteC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlN::ByteT > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_ImageByteC")) goto fail;
    result = (RavlImageN::ImageC<RavlN::ByteT > *)new RavlImageN::ImageC<RavlN::ByteT >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageByteC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::SizeT arg1 ;
    RavlN::SizeT arg2 ;
    RavlImageN::ImageC<RavlN::ByteT > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ImageByteC",&obj0,&obj1)) goto fail;
    arg1 = (RavlN::SizeT) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (RavlN::SizeT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (RavlImageN::ImageC<RavlN::ByteT > *)new RavlImageN::ImageC<RavlN::ByteT >(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageByteC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IndexRange2dC *arg1 = 0 ;
    RavlImageN::ImageC<RavlN::ByteT > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ImageByteC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlImageN::ImageC<RavlN::ByteT > *)new RavlImageN::ImageC<RavlN::ByteT >((RavlN::IndexRange2dC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageByteC__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlN::ByteT > *arg1 = 0 ;
    RavlN::IndexRange2dC *arg2 = 0 ;
    RavlImageN::ImageC<RavlN::ByteT > *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_ImageByteC",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__IndexRange2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlImageN::ImageC<RavlN::ByteT > *)new RavlImageN::ImageC<RavlN::ByteT >((RavlImageN::ImageC<RavlN::ByteT > const &)*arg1,(RavlN::IndexRange2dC const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ImageByteC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_ImageByteC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_ImageByteC__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__IndexRange2dC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_ImageByteC__SWIG_3(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_ImageByteC__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_ImageByteC'");
    return NULL;
}


static PyObject *_wrap_ImageByteC_Rows(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlN::ByteT > *arg1 = (RavlImageN::ImageC<RavlN::ByteT > *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ImageByteC_Rows",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlImageN::ImageC<RavlN::ByteT > const *)arg1)->Rows();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ImageByteC_Cols(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlN::ByteT > *arg1 = (RavlImageN::ImageC<RavlN::ByteT > *) 0 ;
    RavlN::SizeT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ImageByteC_Cols",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::SizeT)((RavlImageN::ImageC<RavlN::ByteT > const *)arg1)->Cols();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ImageByteC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::ImageC<RavlN::ByteT > *arg1 = (RavlImageN::ImageC<RavlN::ByteT > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ImageByteC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ImageByteC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Save__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC arg1 ;
    RavlImageN::ImageC<RavlN::ByteT > *arg2 = 0 ;
    bool result;
    RavlN::StringC *argp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Save",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)RavlImageN::Save(arg1,(RavlImageN::ImageC<RavlN::ByteT > const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Load__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC arg1 ;
    RavlImageN::ImageC<RavlN::ByteT > *arg2 = 0 ;
    bool result;
    RavlN::StringC *argp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Load",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)RavlImageN::Load(arg1,*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Save__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC arg1 ;
    RavlImageN::ImageC<RavlN::RealT > *arg2 = 0 ;
    bool result;
    RavlN::StringC *argp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Save",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ImageCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)RavlImageN::Save(arg1,(RavlImageN::ImageC<RavlN::RealT > const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Load__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC arg1 ;
    RavlImageN::ImageC<RavlN::RealT > *arg2 = 0 ;
    bool result;
    RavlN::StringC *argp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Load",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ImageCTdouble_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)RavlImageN::Load(arg1,*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Save__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC arg1 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg2 = 0 ;
    bool result;
    RavlN::StringC *argp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Save",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)RavlImageN::Save(arg1,(RavlImageN::ImageC<RavlImageN::ByteRGBValueC > const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Load__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC arg1 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg2 = 0 ;
    bool result;
    RavlN::StringC *argp1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Load",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)RavlImageN::Load(arg1,*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Save__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg2 = 0 ;
    bool result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:Save",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)RavlImageN::Save((char const *)arg1,(RavlImageN::ImageC<RavlImageN::ByteRGBValueC > const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Save(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Save__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTdouble_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Save__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Save__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Save__SWIG_3(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Save'");
    return NULL;
}


static PyObject *_wrap_Load__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg2 = 0 ;
    bool result;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"sO:Load",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)RavlImageN::Load((char const *)arg1,*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Load(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Load__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTdouble_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Load__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Load__SWIG_2(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Load__SWIG_3(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Load'");
    return NULL;
}


static PyObject *_wrap_DrawPolygon__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlImageN::ByteRGBValueC > *arg1 = 0 ;
    RavlImageN::ByteRGBValueC *arg2 = 0 ;
    RavlN::Polygon2dC *arg3 = 0 ;
    bool arg4 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|O:DrawPolygon",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_RavlN__Polygon2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    RavlImageN::DrawPolygon(*arg1,(RavlImageN::ByteRGBValueC const &)*arg2,(RavlN::Polygon2dC const &)*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DrawPolygon__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Array2dC<RavlN::ByteT > *arg1 = 0 ;
    RavlN::ByteT *arg2 = 0 ;
    RavlN::Polygon2dC *arg3 = 0 ;
    bool arg4 = (bool) false ;
    unsigned char temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|O:DrawPolygon",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    temp2 = (RavlN::ByteT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_RavlN__Polygon2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj3) {
        arg4 = PyInt_AsLong(obj3) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    RavlImageN::DrawPolygon(*arg1,(RavlN::ByteT const &)*arg2,(RavlN::Polygon2dC const &)*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DrawPolygon(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__Polygon2dC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_DrawPolygon__SWIG_0(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_DrawPolygon__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__Array2dCTunsigned_char_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__ByteT, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__Polygon2dC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_DrawPolygon__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_DrawPolygon__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'DrawPolygon'");
    return NULL;
}


static PyObject *_wrap_new_FontC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_FontC")) goto fail;
    result = (RavlImageN::FontC *)new RavlImageN::FontC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlImageN__FontC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FontC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:FontC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlImageN::FontC const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FontC_Center(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
    RavlN::StringC arg2 ;
    RavlN::Index2dC result;
    RavlN::StringC *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:FontC_Center",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = ((RavlImageN::FontC const *)arg1)->Center(arg2);
    
    {
        RavlN::Index2dC * resultptr;
        resultptr = new RavlN::Index2dC((RavlN::Index2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Index2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FontC_Size(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
    RavlN::StringC arg2 ;
    RavlN::Index2dC result;
    RavlN::StringC *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:FontC_Size",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = ((RavlImageN::FontC const *)arg1)->Size(arg2);
    
    {
        RavlN::Index2dC * resultptr;
        resultptr = new RavlN::Index2dC((RavlN::Index2dC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__Index2dC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_FontC_Count(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:FontC_Count",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)((RavlImageN::FontC const *)arg1)->Count();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_FontC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = (RavlImageN::FontC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_FontC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * FontC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlImageN__FontC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_DefaultFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC result;
    
    if(!PyArg_ParseTuple(args,(char *)":DefaultFont")) goto fail;
    result = RavlImageN::DefaultFont();
    
    {
        RavlImageN::FontC * resultptr;
        resultptr = new RavlImageN::FontC((RavlImageN::FontC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlImageN__FontC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DrawText__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = 0 ;
    RavlImageN::ByteRGBValueC *arg2 = 0 ;
    RavlN::Index2dC *arg3 = 0 ;
    RavlN::StringC *arg4 = 0 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:DrawText",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    RavlImageN::DrawText((RavlImageN::FontC const &)*arg1,(RavlImageN::ByteRGBValueC const &)*arg2,(RavlN::Index2dC const &)*arg3,(RavlN::StringC const &)*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DrawText__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = 0 ;
    RavlN::ByteT *arg2 = 0 ;
    RavlN::Index2dC *arg3 = 0 ;
    RavlN::StringC *arg4 = 0 ;
    RavlImageN::ImageC<RavlN::ByteT > *arg5 = 0 ;
    unsigned char temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:DrawText",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    temp2 = (RavlN::ByteT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    RavlImageN::DrawText((RavlImageN::FontC const &)*arg1,(RavlN::ByteT const &)*arg2,(RavlN::Index2dC const &)*arg3,(RavlN::StringC const &)*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DrawText(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlImageN__FontC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__Index2dC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_DrawText__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlImageN__FontC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__ByteT, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__Index2dC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_DrawText__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'DrawText'");
    return NULL;
}


static PyObject *_wrap_DrawTextCenter__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = 0 ;
    RavlImageN::ByteRGBValueC *arg2 = 0 ;
    RavlN::Index2dC *arg3 = 0 ;
    RavlN::StringC *arg4 = 0 ;
    RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *arg5 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:DrawTextCenter",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlImageN__ByteRGBValueC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    RavlImageN::DrawTextCenter((RavlImageN::FontC const &)*arg1,(RavlImageN::ByteRGBValueC const &)*arg2,(RavlN::Index2dC const &)*arg3,(RavlN::StringC const &)*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DrawTextCenter__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlImageN::FontC *arg1 = 0 ;
    RavlN::ByteT *arg2 = 0 ;
    RavlN::Index2dC *arg3 = 0 ;
    RavlN::StringC *arg4 = 0 ;
    RavlImageN::ImageC<RavlN::ByteT > *arg5 = 0 ;
    unsigned char temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:DrawTextCenter",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlImageN__FontC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    temp2 = (RavlN::ByteT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_RavlN__Index2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    RavlImageN::DrawTextCenter((RavlImageN::FontC const &)*arg1,(RavlN::ByteT const &)*arg2,(RavlN::Index2dC const &)*arg3,(RavlN::StringC const &)*arg4,*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DrawTextCenter(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlImageN__FontC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlImageN__ByteRGBValueC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__Index2dC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_DrawTextCenter__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlImageN__FontC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__ByteT, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_RavlN__Index2dC, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        } else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_RavlImageN__ImageCTunsigned_char_t, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            } else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_DrawTextCenter__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'DrawTextCenter'");
    return NULL;
}


static PyObject *_wrap_new_Affine2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Affine2dC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Affine2dC")) goto fail;
    result = (RavlN::Affine2dC *)new RavlN::Affine2dC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Affine2dC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Affine2dC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::Affine2dC *arg1 = (RavlN::Affine2dC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Affine2dC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__Affine2dC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Affine2dC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__Affine2dC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_DateC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_DateC")) goto fail;
    result = (RavlN::DateC *)new RavlN::DateC();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_NowUTC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC result;
    
    if(!PyArg_ParseTuple(args,(char *)":DateC_NowUTC")) goto fail;
    result = RavlN::DateC::NowUTC();
    
    {
        RavlN::DateC * resultptr;
        resultptr = new RavlN::DateC((RavlN::DateC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DateC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_NowLocal(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC result;
    
    if(!PyArg_ParseTuple(args,(char *)":DateC_NowLocal")) goto fail;
    result = RavlN::DateC::NowLocal();
    
    {
        RavlN::DateC * resultptr;
        resultptr = new RavlN::DateC((RavlN::DateC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DateC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_NowVirtual(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC result;
    
    if(!PyArg_ParseTuple(args,(char *)":DateC_NowVirtual")) goto fail;
    result = RavlN::DateC::NowVirtual();
    
    {
        RavlN::DateC * resultptr;
        resultptr = new RavlN::DateC((RavlN::DateC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DateC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_TimeZoneOffset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC result;
    
    if(!PyArg_ParseTuple(args,(char *)":DateC_TimeZoneOffset")) goto fail;
    result = RavlN::DateC::TimeZoneOffset();
    
    {
        RavlN::DateC * resultptr;
        resultptr = new RavlN::DateC((RavlN::DateC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DateC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DateC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bool arg1 ;
    bool arg2 = (bool) false ;
    RavlN::DateC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:new_DateC",&obj0,&obj1)) goto fail;
    arg1 = PyInt_AsLong(obj0) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DateC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::RealT arg1 ;
    RavlN::DateC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"d:new_DateC",&arg1)) goto fail;
    result = (RavlN::DateC *)new RavlN::DateC(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DateC__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::IntT arg1 ;
    RavlN::IntT arg2 ;
    RavlN::IntT arg3 ;
    RavlN::IntT arg4 = (RavlN::IntT) 0 ;
    RavlN::IntT arg5 = (RavlN::IntT) 0 ;
    RavlN::IntT arg6 = (RavlN::IntT) 0 ;
    RavlN::IntT arg7 = (RavlN::IntT) 0 ;
    bool arg8 = (bool) false ;
    RavlN::DateC *result;
    PyObject * obj7 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iii|iiiiO:new_DateC",&arg1,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&obj7)) goto fail;
    if (obj7) {
        arg8 = PyInt_AsLong(obj7) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DateC__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long arg1 ;
    long arg2 ;
    RavlN::DateC *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ll:new_DateC",&arg1,&arg2)) goto fail;
    result = (RavlN::DateC *)new RavlN::DateC(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DateC__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = 0 ;
    RavlN::DateC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DateC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DateC *)new RavlN::DateC((RavlN::DateC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DateC__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::StringC *arg1 = 0 ;
    RavlN::DateC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_DateC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::DateC *)new RavlN::DateC((RavlN::StringC const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_DateC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[9];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 8); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_DateC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DateC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DateC__SWIG_5(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__StringC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_DateC__SWIG_6(self,args);
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_DateC__SWIG_1(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_DateC__SWIG_1(self,args);
            }
        }
    }
    if (argc == 1) {
        int _v;
        {
            _v = (PyFloat_Check(argv[0]) || PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_DateC__SWIG_2(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_DateC__SWIG_4(self,args);
            }
        }
    }
    if ((argc >= 3) && (argc <= 8)) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_new_DateC__SWIG_3(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_new_DateC__SWIG_3(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_new_DateC__SWIG_3(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                if (argc <= 6) {
                                    return _wrap_new_DateC__SWIG_3(self,args);
                                }
                                {
                                    _v = (PyInt_Check(argv[6]) || PyLong_Check(argv[6])) ? 1 : 0;
                                }
                                if (_v) {
                                    if (argc <= 7) {
                                        return _wrap_new_DateC__SWIG_3(self,args);
                                    }
                                    {
                                        _v = (PyInt_Check(argv[7]) || PyLong_Check(argv[7])) ? 1 : 0;
                                    }
                                    if (_v) {
                                        return _wrap_new_DateC__SWIG_3(self,args);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_DateC'");
    return NULL;
}


static PyObject *_wrap_DateC_IsLeapYear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    bool result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:DateC_IsLeapYear",&arg1)) goto fail;
    result = (bool)RavlN::DateC::IsLeapYear(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_YearToDaysSince1970(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:DateC_YearToDaysSince1970",&arg1)) goto fail;
    result = (int)RavlN::DateC::YearToDaysSince1970(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_IsValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_IsValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DateC const *)arg1)->IsValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_IsZero(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_IsZero",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DateC const *)arg1)->IsZero();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_SetInvalid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_SetInvalid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetInvalid();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_SetToNow(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_SetToNow",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->SetToNow(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_MaxUSeconds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_MaxUSeconds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((RavlN::DateC const *)arg1)->MaxUSeconds();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_Resolution(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_Resolution",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((RavlN::DateC const *)arg1)->Resolution();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_NormalisePos(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_NormalisePos",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NormalisePos();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_NormaliseNeg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_NormaliseNeg",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->NormaliseNeg();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::DateC const *)arg1)->operator ==((RavlN::DateC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::DateC const *)arg1)->operator !=((RavlN::DateC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___gt__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___gt__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::DateC const *)arg1)->operator >((RavlN::DateC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___lt__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___lt__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::DateC const *)arg1)->operator <((RavlN::DateC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___ge__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___ge__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::DateC const *)arg1)->operator >=((RavlN::DateC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___le__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___le__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((RavlN::DateC const *)arg1)->operator <=((RavlN::DateC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___add__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    RavlN::DateC result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___add__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((RavlN::DateC const *)arg1)->operator +((RavlN::DateC const &)*arg2);
    
    {
        RavlN::DateC * resultptr;
        resultptr = new RavlN::DateC((RavlN::DateC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DateC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___sub__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    RavlN::DateC result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___sub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((RavlN::DateC const *)arg1)->operator -((RavlN::DateC const &)*arg2);
    
    {
        RavlN::DateC * resultptr;
        resultptr = new RavlN::DateC((RavlN::DateC &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_RavlN__DateC, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___isub____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    RavlN::DateC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___isub__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlN::DateC const &_result_ref = (arg1)->operator -=((RavlN::DateC const &)*arg2);
        result = (RavlN::DateC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___isub____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    double arg2 ;
    RavlN::DateC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:DateC___isub__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::DateC const &_result_ref = (arg1)->operator -=(arg2);
        result = (RavlN::DateC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___isub__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DateC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__DateC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_DateC___isub____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DateC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_DateC___isub____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'DateC___isub__'");
    return NULL;
}


static PyObject *_wrap_DateC___iadd____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::DateC *arg2 = 0 ;
    RavlN::DateC *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC___iadd__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        RavlN::DateC const &_result_ref = (arg1)->operator +=((RavlN::DateC const &)*arg2);
        result = (RavlN::DateC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___iadd____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    double arg2 ;
    RavlN::DateC *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Od:DateC___iadd__",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::DateC const &_result_ref = (arg1)->operator +=(arg2);
        result = (RavlN::DateC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__DateC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC___iadd__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DateC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_RavlN__DateC, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_DateC___iadd____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__DateC, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyFloat_Check(argv[1]) || PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_DateC___iadd____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'DateC___iadd__'");
    return NULL;
}


static PyObject *_wrap_DateC_Text(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::StringC result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_Text",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((RavlN::DateC const *)arg1)->Text();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_ODBC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::StringC result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_ODBC",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = ((RavlN::DateC const *)arg1)->ODBC(arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_SetODBC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    RavlN::StringC *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:DateC_SetODBC",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_RavlN__StringC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->SetODBC((RavlN::StringC const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_CTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::StringC result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_CTime",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = ((RavlN::DateC const *)arg1)->CTime(arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_CTimeShort(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::StringC result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_CTimeShort",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = ((RavlN::DateC const *)arg1)->CTimeShort(arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_USeconds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_USeconds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((RavlN::DateC const *)arg1)->USeconds();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_TotalSeconds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_TotalSeconds",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (long)((RavlN::DateC const *)arg1)->TotalSeconds();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_Double(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_Double",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)((RavlN::DateC const *)arg1)->Double();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_Seconds(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_Seconds",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Seconds(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_Minute(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_Minute",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Minute(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_Hour(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_Hour",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Hour(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_Month(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_Month",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Month(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_Year(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_Year",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::IntT)((RavlN::DateC const *)arg1)->Year(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_DayInMonth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_DayInMonth",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInMonth(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_DayInYear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_DayInYear",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInYear(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_DayInWeek(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::IntT result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_DayInWeek",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::IntT)((RavlN::DateC const *)arg1)->DayInWeek(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_TextDayInWeek(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool arg2 = (bool) false ;
    RavlN::StringC result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:DateC_TextDayInWeek",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = ((RavlN::DateC const *)arg1)->TextDayInWeek(arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->chars(), (&result)->Size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_DaylightSaving(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_DaylightSaving",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DateC const *)arg1)->DaylightSaving();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_DateC_Wait(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:DateC_Wait",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::DateC const *)arg1)->Wait();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_DateC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::DateC *arg1 = (RavlN::DateC *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_DateC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__DateC,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * DateC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__DateC, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_HashInt64Int64C(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::UIntT arg1 = (RavlN::UIntT) 23 ;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:new_HashInt64Int64C",&obj0)) goto fail;
    if (obj0) {
        arg1 = (RavlN::UIntT) PyInt_AsLong(obj0);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashC<RavlN::Int64T,RavlN::Int64T >(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Lookup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    RavlN::Int64T *arg3 = 0 ;
    bool result;
    RavlN::Int64T temp2 ;
    RavlN::Int64T temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    arg3 = &temp3;
    if(!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Lookup",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)((RavlN::HashC<RavlN::Int64T,RavlN::Int64T > const *)arg1)->Lookup((RavlN::Int64T const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    {
        PyObject *o = PyLong_FromLongLong((RavlN::Int64T) (*arg3));
        resultobj = t_output_helper(resultobj,o);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Update__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    RavlN::Int64T *arg3 = 0 ;
    bool result;
    RavlN::Int64T temp2 ;
    RavlN::Int64T temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:HashInt64Int64C_Update",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    temp3 = (RavlN::Int64T) PyLong_AsLongLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = &temp3;
    result = (bool)(arg1)->Update((RavlN::Int64T const &)*arg2,(RavlN::Int64T const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Update__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    RavlN::Int64T *result;
    RavlN::Int64T temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Update",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    {
        RavlN::Int64T &_result_ref = (arg1)->Update((RavlN::Int64T const &)*arg2);
        result = (RavlN::Int64T *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Int64T, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Update(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_HashInt64Int64C_Update__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_HashInt64Int64C_Update__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'HashInt64Int64C_Update'");
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Insert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    RavlN::Int64T *arg3 = 0 ;
    bool result;
    RavlN::Int64T temp2 ;
    RavlN::Int64T temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:HashInt64Int64C_Insert",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    temp3 = (RavlN::Int64T) PyLong_AsLongLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = &temp3;
    result = (bool)(arg1)->Insert((RavlN::Int64T const &)*arg2,(RavlN::Int64T const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Access(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    RavlN::Int64T const &arg3_defvalue = RavlN::Int64T() ;
    RavlN::Int64T *arg3 = (RavlN::Int64T *) &arg3_defvalue ;
    RavlN::Int64T *result;
    RavlN::Int64T temp2 ;
    RavlN::Int64T temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:HashInt64Int64C_Access",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    if (obj2) {
        temp3 = (RavlN::Int64T) PyLong_AsLongLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
        arg3 = &temp3;
    }
    {
        RavlN::Int64T &_result_ref = (arg1)->Access((RavlN::Int64T const &)*arg2,(RavlN::Int64T const &)*arg3);
        result = (RavlN::Int64T *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Int64T, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_AccessCopy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    RavlN::Int64T const &arg3_defvalue = RavlN::Int64T() ;
    RavlN::Int64T *arg3 = (RavlN::Int64T *) &arg3_defvalue ;
    RavlN::Int64T *result;
    RavlN::Int64T temp2 ;
    RavlN::Int64T temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:HashInt64Int64C_AccessCopy",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    if (obj2) {
        temp3 = (RavlN::Int64T) PyLong_AsLongLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
        arg3 = &temp3;
    }
    {
        RavlN::Int64T &_result_ref = (arg1)->AccessCopy((RavlN::Int64T const &)*arg2,(RavlN::Int64T const &)*arg3);
        result = (RavlN::Int64T *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Int64T, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    bool arg3 = (bool) true ;
    bool result;
    RavlN::Int64T temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:HashInt64Int64C_Del",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->Del((RavlN::Int64T const &)*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    bool arg3 = (bool) true ;
    RavlN::Int64T result;
    RavlN::Int64T temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:HashInt64Int64C_Get",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (RavlN::Int64T)(arg1)->Get((RavlN::Int64T const &)*arg2,arg3);
    
    resultobj = PyLong_FromLongLong(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *arg2 = 0 ;
    bool result;
    RavlN::Int64T temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_IsElm",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    temp2 = (RavlN::Int64T) PyLong_AsLongLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = &temp2;
    result = (bool)((RavlN::HashC<RavlN::Int64T,RavlN::Int64T > const *)arg1)->IsElm((RavlN::Int64T const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64C_Empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Empty();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Bins(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::UIntT result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64C_Bins",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (RavlN::UIntT)((RavlN::HashC<RavlN::Int64T,RavlN::Int64T > const *)arg1)->Bins();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64C_Resize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::SizeT arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:HashInt64Int64C_Resize",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (RavlN::SizeT) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Resize(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_HashInt64Int64C(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_HashInt64Int64C",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * HashInt64Int64C_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_HashInt64Int64IterC__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_HashInt64Int64IterC")) goto fail;
    result = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T >();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_HashInt64Int64IterC__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashC<RavlN::Int64T,RavlN::Int64T > *arg1 = 0 ;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_HashInt64Int64IterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T >((RavlN::HashC<RavlN::Int64T,RavlN::Int64T > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_HashInt64Int64IterC__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = 0 ;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_HashInt64Int64IterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *)new RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T >((RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_HashInt64Int64IterC(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_HashInt64Int64IterC__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__HashCTlong_long_long_long_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_HashInt64Int64IterC__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_HashInt64Int64IterC__SWIG_2(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_HashInt64Int64IterC'");
    return NULL;
}


static PyObject *_wrap_HashInt64Int64IterC_First(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_First",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->First();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64IterC_Next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Next();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64IterC_IsElm(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_IsElm",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > const *)arg1)->IsElm();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64IterC_Key(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Key",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::Int64T const &_result_ref = ((RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > const *)arg1)->Key();
        result = (RavlN::Int64T *) &_result_ref;
    }
    
    resultobj = PyLong_FromLongLong(*(result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64IterC_Data__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::Int64T const &_result_ref = ((RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > const *)arg1)->Data();
        result = (RavlN::Int64T *) &_result_ref;
    }
    
    resultobj = PyLong_FromLongLong(*(result));
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64IterC_Data__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    RavlN::Int64T *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Data",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        RavlN::Int64T &_result_ref = (arg1)->Data();
        result = (RavlN::Int64T *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_RavlN__Int64T, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_HashInt64Int64IterC_Data(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_HashInt64Int64IterC_Data__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_HashInt64Int64IterC_Data__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'HashInt64Int64IterC_Data'");
    return NULL;
}


static PyObject *_wrap_HashInt64Int64IterC_Del(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:HashInt64Int64IterC_Del",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Del();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_HashInt64Int64IterC(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *arg1 = (RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_HashInt64Int64IterC",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * HashInt64Int64IterC_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_RavlN__HashIterCTlong_long_long_long_t, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyMethodDef SwigMethods[] = {
	 { (char *)"new_DListRealC", _wrap_new_DListRealC, METH_VARARGS },
	 { (char *)"DListRealC_Empty", _wrap_DListRealC_Empty, METH_VARARGS },
	 { (char *)"DListRealC_InsFirst", _wrap_DListRealC_InsFirst, METH_VARARGS },
	 { (char *)"DListRealC_InsLast", _wrap_DListRealC_InsLast, METH_VARARGS },
	 { (char *)"DListRealC_PopFirst", _wrap_DListRealC_PopFirst, METH_VARARGS },
	 { (char *)"DListRealC_PopLast", _wrap_DListRealC_PopLast, METH_VARARGS },
	 { (char *)"DListRealC_MoveFirst", _wrap_DListRealC_MoveFirst, METH_VARARGS },
	 { (char *)"DListRealC_MoveLast", _wrap_DListRealC_MoveLast, METH_VARARGS },
	 { (char *)"DListRealC_First", _wrap_DListRealC_First, METH_VARARGS },
	 { (char *)"DListRealC_Last", _wrap_DListRealC_Last, METH_VARARGS },
	 { (char *)"DListRealC_Del", _wrap_DListRealC_Del, METH_VARARGS },
	 { (char *)"DListRealC_Contains", _wrap_DListRealC_Contains, METH_VARARGS },
	 { (char *)"DListRealC_Nth", _wrap_DListRealC_Nth, METH_VARARGS },
	 { (char *)"delete_DListRealC", _wrap_delete_DListRealC, METH_VARARGS },
	 { (char *)"DListRealC_swigregister", DListRealC_swigregister, METH_VARARGS },
	 { (char *)"new_DListRealIterC", _wrap_new_DListRealIterC, METH_VARARGS },
	 { (char *)"DListRealIterC_IsValid", _wrap_DListRealIterC_IsValid, METH_VARARGS },
	 { (char *)"DListRealIterC_First", _wrap_DListRealIterC_First, METH_VARARGS },
	 { (char *)"DListRealIterC_Last", _wrap_DListRealIterC_Last, METH_VARARGS },
	 { (char *)"DListRealIterC_IsElm", _wrap_DListRealIterC_IsElm, METH_VARARGS },
	 { (char *)"DListRealIterC_IsFirst", _wrap_DListRealIterC_IsFirst, METH_VARARGS },
	 { (char *)"DListRealIterC_IsLast", _wrap_DListRealIterC_IsLast, METH_VARARGS },
	 { (char *)"DListRealIterC_Next", _wrap_DListRealIterC_Next, METH_VARARGS },
	 { (char *)"DListRealIterC_Prev", _wrap_DListRealIterC_Prev, METH_VARARGS },
	 { (char *)"DListRealIterC_NextCrc", _wrap_DListRealIterC_NextCrc, METH_VARARGS },
	 { (char *)"DListRealIterC_PrevCrc", _wrap_DListRealIterC_PrevCrc, METH_VARARGS },
	 { (char *)"DListRealIterC_Nth", _wrap_DListRealIterC_Nth, METH_VARARGS },
	 { (char *)"DListRealIterC_NextData", _wrap_DListRealIterC_NextData, METH_VARARGS },
	 { (char *)"DListRealIterC_PrevData", _wrap_DListRealIterC_PrevData, METH_VARARGS },
	 { (char *)"DListRealIterC_NextCrcData", _wrap_DListRealIterC_NextCrcData, METH_VARARGS },
	 { (char *)"DListRealIterC_PrevCrcData", _wrap_DListRealIterC_PrevCrcData, METH_VARARGS },
	 { (char *)"DListRealIterC_Tail", _wrap_DListRealIterC_Tail, METH_VARARGS },
	 { (char *)"DListRealIterC_Head", _wrap_DListRealIterC_Head, METH_VARARGS },
	 { (char *)"DListRealIterC_InclusiveTail", _wrap_DListRealIterC_InclusiveTail, METH_VARARGS },
	 { (char *)"DListRealIterC_InclusiveHead", _wrap_DListRealIterC_InclusiveHead, METH_VARARGS },
	 { (char *)"DListRealIterC_Data", _wrap_DListRealIterC_Data, METH_VARARGS },
	 { (char *)"DListRealIterC___deref__", _wrap_DListRealIterC___deref__, METH_VARARGS },
	 { (char *)"delete_DListRealIterC", _wrap_delete_DListRealIterC, METH_VARARGS },
	 { (char *)"DListRealIterC_swigregister", DListRealIterC_swigregister, METH_VARARGS },
	 { (char *)"new_DListIntC", _wrap_new_DListIntC, METH_VARARGS },
	 { (char *)"DListIntC_Empty", _wrap_DListIntC_Empty, METH_VARARGS },
	 { (char *)"DListIntC_InsFirst", _wrap_DListIntC_InsFirst, METH_VARARGS },
	 { (char *)"DListIntC_InsLast", _wrap_DListIntC_InsLast, METH_VARARGS },
	 { (char *)"DListIntC_PopFirst", _wrap_DListIntC_PopFirst, METH_VARARGS },
	 { (char *)"DListIntC_PopLast", _wrap_DListIntC_PopLast, METH_VARARGS },
	 { (char *)"DListIntC_MoveFirst", _wrap_DListIntC_MoveFirst, METH_VARARGS },
	 { (char *)"DListIntC_MoveLast", _wrap_DListIntC_MoveLast, METH_VARARGS },
	 { (char *)"DListIntC_First", _wrap_DListIntC_First, METH_VARARGS },
	 { (char *)"DListIntC_Last", _wrap_DListIntC_Last, METH_VARARGS },
	 { (char *)"DListIntC_Del", _wrap_DListIntC_Del, METH_VARARGS },
	 { (char *)"DListIntC_Contains", _wrap_DListIntC_Contains, METH_VARARGS },
	 { (char *)"DListIntC_Nth", _wrap_DListIntC_Nth, METH_VARARGS },
	 { (char *)"delete_DListIntC", _wrap_delete_DListIntC, METH_VARARGS },
	 { (char *)"DListIntC_swigregister", DListIntC_swigregister, METH_VARARGS },
	 { (char *)"new_DListIntIterC", _wrap_new_DListIntIterC, METH_VARARGS },
	 { (char *)"DListIntIterC_IsValid", _wrap_DListIntIterC_IsValid, METH_VARARGS },
	 { (char *)"DListIntIterC_First", _wrap_DListIntIterC_First, METH_VARARGS },
	 { (char *)"DListIntIterC_Last", _wrap_DListIntIterC_Last, METH_VARARGS },
	 { (char *)"DListIntIterC_IsElm", _wrap_DListIntIterC_IsElm, METH_VARARGS },
	 { (char *)"DListIntIterC_IsFirst", _wrap_DListIntIterC_IsFirst, METH_VARARGS },
	 { (char *)"DListIntIterC_IsLast", _wrap_DListIntIterC_IsLast, METH_VARARGS },
	 { (char *)"DListIntIterC_Next", _wrap_DListIntIterC_Next, METH_VARARGS },
	 { (char *)"DListIntIterC_Prev", _wrap_DListIntIterC_Prev, METH_VARARGS },
	 { (char *)"DListIntIterC_NextCrc", _wrap_DListIntIterC_NextCrc, METH_VARARGS },
	 { (char *)"DListIntIterC_PrevCrc", _wrap_DListIntIterC_PrevCrc, METH_VARARGS },
	 { (char *)"DListIntIterC_Nth", _wrap_DListIntIterC_Nth, METH_VARARGS },
	 { (char *)"DListIntIterC_NextData", _wrap_DListIntIterC_NextData, METH_VARARGS },
	 { (char *)"DListIntIterC_PrevData", _wrap_DListIntIterC_PrevData, METH_VARARGS },
	 { (char *)"DListIntIterC_NextCrcData", _wrap_DListIntIterC_NextCrcData, METH_VARARGS },
	 { (char *)"DListIntIterC_PrevCrcData", _wrap_DListIntIterC_PrevCrcData, METH_VARARGS },
	 { (char *)"DListIntIterC_Tail", _wrap_DListIntIterC_Tail, METH_VARARGS },
	 { (char *)"DListIntIterC_Head", _wrap_DListIntIterC_Head, METH_VARARGS },
	 { (char *)"DListIntIterC_InclusiveTail", _wrap_DListIntIterC_InclusiveTail, METH_VARARGS },
	 { (char *)"DListIntIterC_InclusiveHead", _wrap_DListIntIterC_InclusiveHead, METH_VARARGS },
	 { (char *)"DListIntIterC_Data", _wrap_DListIntIterC_Data, METH_VARARGS },
	 { (char *)"DListIntIterC___deref__", _wrap_DListIntIterC___deref__, METH_VARARGS },
	 { (char *)"delete_DListIntIterC", _wrap_delete_DListIntIterC, METH_VARARGS },
	 { (char *)"DListIntIterC_swigregister", DListIntIterC_swigregister, METH_VARARGS },
	 { (char *)"new_DListUIntC", _wrap_new_DListUIntC, METH_VARARGS },
	 { (char *)"DListUIntC_Empty", _wrap_DListUIntC_Empty, METH_VARARGS },
	 { (char *)"DListUIntC_InsFirst", _wrap_DListUIntC_InsFirst, METH_VARARGS },
	 { (char *)"DListUIntC_InsLast", _wrap_DListUIntC_InsLast, METH_VARARGS },
	 { (char *)"DListUIntC_PopFirst", _wrap_DListUIntC_PopFirst, METH_VARARGS },
	 { (char *)"DListUIntC_PopLast", _wrap_DListUIntC_PopLast, METH_VARARGS },
	 { (char *)"DListUIntC_MoveFirst", _wrap_DListUIntC_MoveFirst, METH_VARARGS },
	 { (char *)"DListUIntC_MoveLast", _wrap_DListUIntC_MoveLast, METH_VARARGS },
	 { (char *)"DListUIntC_First", _wrap_DListUIntC_First, METH_VARARGS },
	 { (char *)"DListUIntC_Last", _wrap_DListUIntC_Last, METH_VARARGS },
	 { (char *)"DListUIntC_Del", _wrap_DListUIntC_Del, METH_VARARGS },
	 { (char *)"DListUIntC_Contains", _wrap_DListUIntC_Contains, METH_VARARGS },
	 { (char *)"DListUIntC_Nth", _wrap_DListUIntC_Nth, METH_VARARGS },
	 { (char *)"delete_DListUIntC", _wrap_delete_DListUIntC, METH_VARARGS },
	 { (char *)"DListUIntC_swigregister", DListUIntC_swigregister, METH_VARARGS },
	 { (char *)"new_DListUIntIterC", _wrap_new_DListUIntIterC, METH_VARARGS },
	 { (char *)"DListUIntIterC_IsValid", _wrap_DListUIntIterC_IsValid, METH_VARARGS },
	 { (char *)"DListUIntIterC_First", _wrap_DListUIntIterC_First, METH_VARARGS },
	 { (char *)"DListUIntIterC_Last", _wrap_DListUIntIterC_Last, METH_VARARGS },
	 { (char *)"DListUIntIterC_IsElm", _wrap_DListUIntIterC_IsElm, METH_VARARGS },
	 { (char *)"DListUIntIterC_IsFirst", _wrap_DListUIntIterC_IsFirst, METH_VARARGS },
	 { (char *)"DListUIntIterC_IsLast", _wrap_DListUIntIterC_IsLast, METH_VARARGS },
	 { (char *)"DListUIntIterC_Next", _wrap_DListUIntIterC_Next, METH_VARARGS },
	 { (char *)"DListUIntIterC_Prev", _wrap_DListUIntIterC_Prev, METH_VARARGS },
	 { (char *)"DListUIntIterC_NextCrc", _wrap_DListUIntIterC_NextCrc, METH_VARARGS },
	 { (char *)"DListUIntIterC_PrevCrc", _wrap_DListUIntIterC_PrevCrc, METH_VARARGS },
	 { (char *)"DListUIntIterC_Nth", _wrap_DListUIntIterC_Nth, METH_VARARGS },
	 { (char *)"DListUIntIterC_NextData", _wrap_DListUIntIterC_NextData, METH_VARARGS },
	 { (char *)"DListUIntIterC_PrevData", _wrap_DListUIntIterC_PrevData, METH_VARARGS },
	 { (char *)"DListUIntIterC_NextCrcData", _wrap_DListUIntIterC_NextCrcData, METH_VARARGS },
	 { (char *)"DListUIntIterC_PrevCrcData", _wrap_DListUIntIterC_PrevCrcData, METH_VARARGS },
	 { (char *)"DListUIntIterC_Tail", _wrap_DListUIntIterC_Tail, METH_VARARGS },
	 { (char *)"DListUIntIterC_Head", _wrap_DListUIntIterC_Head, METH_VARARGS },
	 { (char *)"DListUIntIterC_InclusiveTail", _wrap_DListUIntIterC_InclusiveTail, METH_VARARGS },
	 { (char *)"DListUIntIterC_InclusiveHead", _wrap_DListUIntIterC_InclusiveHead, METH_VARARGS },
	 { (char *)"DListUIntIterC_Data", _wrap_DListUIntIterC_Data, METH_VARARGS },
	 { (char *)"DListUIntIterC___deref__", _wrap_DListUIntIterC___deref__, METH_VARARGS },
	 { (char *)"delete_DListUIntIterC", _wrap_delete_DListUIntIterC, METH_VARARGS },
	 { (char *)"DListUIntIterC_swigregister", DListUIntIterC_swigregister, METH_VARARGS },
	 { (char *)"new_DListInt64C", _wrap_new_DListInt64C, METH_VARARGS },
	 { (char *)"DListInt64C_Empty", _wrap_DListInt64C_Empty, METH_VARARGS },
	 { (char *)"DListInt64C_InsFirst", _wrap_DListInt64C_InsFirst, METH_VARARGS },
	 { (char *)"DListInt64C_InsLast", _wrap_DListInt64C_InsLast, METH_VARARGS },
	 { (char *)"DListInt64C_PopFirst", _wrap_DListInt64C_PopFirst, METH_VARARGS },
	 { (char *)"DListInt64C_PopLast", _wrap_DListInt64C_PopLast, METH_VARARGS },
	 { (char *)"DListInt64C_MoveFirst", _wrap_DListInt64C_MoveFirst, METH_VARARGS },
	 { (char *)"DListInt64C_MoveLast", _wrap_DListInt64C_MoveLast, METH_VARARGS },
	 { (char *)"DListInt64C_First", _wrap_DListInt64C_First, METH_VARARGS },
	 { (char *)"DListInt64C_Last", _wrap_DListInt64C_Last, METH_VARARGS },
	 { (char *)"DListInt64C_Del", _wrap_DListInt64C_Del, METH_VARARGS },
	 { (char *)"DListInt64C_Contains", _wrap_DListInt64C_Contains, METH_VARARGS },
	 { (char *)"DListInt64C_Nth", _wrap_DListInt64C_Nth, METH_VARARGS },
	 { (char *)"delete_DListInt64C", _wrap_delete_DListInt64C, METH_VARARGS },
	 { (char *)"DListInt64C_swigregister", DListInt64C_swigregister, METH_VARARGS },
	 { (char *)"new_DListInt64IterC", _wrap_new_DListInt64IterC, METH_VARARGS },
	 { (char *)"DListInt64IterC_IsValid", _wrap_DListInt64IterC_IsValid, METH_VARARGS },
	 { (char *)"DListInt64IterC_First", _wrap_DListInt64IterC_First, METH_VARARGS },
	 { (char *)"DListInt64IterC_Last", _wrap_DListInt64IterC_Last, METH_VARARGS },
	 { (char *)"DListInt64IterC_IsElm", _wrap_DListInt64IterC_IsElm, METH_VARARGS },
	 { (char *)"DListInt64IterC_IsFirst", _wrap_DListInt64IterC_IsFirst, METH_VARARGS },
	 { (char *)"DListInt64IterC_IsLast", _wrap_DListInt64IterC_IsLast, METH_VARARGS },
	 { (char *)"DListInt64IterC_Next", _wrap_DListInt64IterC_Next, METH_VARARGS },
	 { (char *)"DListInt64IterC_Prev", _wrap_DListInt64IterC_Prev, METH_VARARGS },
	 { (char *)"DListInt64IterC_NextCrc", _wrap_DListInt64IterC_NextCrc, METH_VARARGS },
	 { (char *)"DListInt64IterC_PrevCrc", _wrap_DListInt64IterC_PrevCrc, METH_VARARGS },
	 { (char *)"DListInt64IterC_Nth", _wrap_DListInt64IterC_Nth, METH_VARARGS },
	 { (char *)"DListInt64IterC_NextData", _wrap_DListInt64IterC_NextData, METH_VARARGS },
	 { (char *)"DListInt64IterC_PrevData", _wrap_DListInt64IterC_PrevData, METH_VARARGS },
	 { (char *)"DListInt64IterC_NextCrcData", _wrap_DListInt64IterC_NextCrcData, METH_VARARGS },
	 { (char *)"DListInt64IterC_PrevCrcData", _wrap_DListInt64IterC_PrevCrcData, METH_VARARGS },
	 { (char *)"DListInt64IterC_Tail", _wrap_DListInt64IterC_Tail, METH_VARARGS },
	 { (char *)"DListInt64IterC_Head", _wrap_DListInt64IterC_Head, METH_VARARGS },
	 { (char *)"DListInt64IterC_InclusiveTail", _wrap_DListInt64IterC_InclusiveTail, METH_VARARGS },
	 { (char *)"DListInt64IterC_InclusiveHead", _wrap_DListInt64IterC_InclusiveHead, METH_VARARGS },
	 { (char *)"DListInt64IterC_Data", _wrap_DListInt64IterC_Data, METH_VARARGS },
	 { (char *)"DListInt64IterC___deref__", _wrap_DListInt64IterC___deref__, METH_VARARGS },
	 { (char *)"delete_DListInt64IterC", _wrap_delete_DListInt64IterC, METH_VARARGS },
	 { (char *)"DListInt64IterC_swigregister", DListInt64IterC_swigregister, METH_VARARGS },
	 { (char *)"new_DListInt16C", _wrap_new_DListInt16C, METH_VARARGS },
	 { (char *)"DListInt16C_Empty", _wrap_DListInt16C_Empty, METH_VARARGS },
	 { (char *)"DListInt16C_InsFirst", _wrap_DListInt16C_InsFirst, METH_VARARGS },
	 { (char *)"DListInt16C_InsLast", _wrap_DListInt16C_InsLast, METH_VARARGS },
	 { (char *)"DListInt16C_PopFirst", _wrap_DListInt16C_PopFirst, METH_VARARGS },
	 { (char *)"DListInt16C_PopLast", _wrap_DListInt16C_PopLast, METH_VARARGS },
	 { (char *)"DListInt16C_MoveFirst", _wrap_DListInt16C_MoveFirst, METH_VARARGS },
	 { (char *)"DListInt16C_MoveLast", _wrap_DListInt16C_MoveLast, METH_VARARGS },
	 { (char *)"DListInt16C_First", _wrap_DListInt16C_First, METH_VARARGS },
	 { (char *)"DListInt16C_Last", _wrap_DListInt16C_Last, METH_VARARGS },
	 { (char *)"DListInt16C_Del", _wrap_DListInt16C_Del, METH_VARARGS },
	 { (char *)"DListInt16C_Contains", _wrap_DListInt16C_Contains, METH_VARARGS },
	 { (char *)"DListInt16C_Nth", _wrap_DListInt16C_Nth, METH_VARARGS },
	 { (char *)"delete_DListInt16C", _wrap_delete_DListInt16C, METH_VARARGS },
	 { (char *)"DListInt16C_swigregister", DListInt16C_swigregister, METH_VARARGS },
	 { (char *)"new_DListInt16IterC", _wrap_new_DListInt16IterC, METH_VARARGS },
	 { (char *)"DListInt16IterC_IsValid", _wrap_DListInt16IterC_IsValid, METH_VARARGS },
	 { (char *)"DListInt16IterC_First", _wrap_DListInt16IterC_First, METH_VARARGS },
	 { (char *)"DListInt16IterC_Last", _wrap_DListInt16IterC_Last, METH_VARARGS },
	 { (char *)"DListInt16IterC_IsElm", _wrap_DListInt16IterC_IsElm, METH_VARARGS },
	 { (char *)"DListInt16IterC_IsFirst", _wrap_DListInt16IterC_IsFirst, METH_VARARGS },
	 { (char *)"DListInt16IterC_IsLast", _wrap_DListInt16IterC_IsLast, METH_VARARGS },
	 { (char *)"DListInt16IterC_Next", _wrap_DListInt16IterC_Next, METH_VARARGS },
	 { (char *)"DListInt16IterC_Prev", _wrap_DListInt16IterC_Prev, METH_VARARGS },
	 { (char *)"DListInt16IterC_NextCrc", _wrap_DListInt16IterC_NextCrc, METH_VARARGS },
	 { (char *)"DListInt16IterC_PrevCrc", _wrap_DListInt16IterC_PrevCrc, METH_VARARGS },
	 { (char *)"DListInt16IterC_Nth", _wrap_DListInt16IterC_Nth, METH_VARARGS },
	 { (char *)"DListInt16IterC_NextData", _wrap_DListInt16IterC_NextData, METH_VARARGS },
	 { (char *)"DListInt16IterC_PrevData", _wrap_DListInt16IterC_PrevData, METH_VARARGS },
	 { (char *)"DListInt16IterC_NextCrcData", _wrap_DListInt16IterC_NextCrcData, METH_VARARGS },
	 { (char *)"DListInt16IterC_PrevCrcData", _wrap_DListInt16IterC_PrevCrcData, METH_VARARGS },
	 { (char *)"DListInt16IterC_Tail", _wrap_DListInt16IterC_Tail, METH_VARARGS },
	 { (char *)"DListInt16IterC_Head", _wrap_DListInt16IterC_Head, METH_VARARGS },
	 { (char *)"DListInt16IterC_InclusiveTail", _wrap_DListInt16IterC_InclusiveTail, METH_VARARGS },
	 { (char *)"DListInt16IterC_InclusiveHead", _wrap_DListInt16IterC_InclusiveHead, METH_VARARGS },
	 { (char *)"DListInt16IterC_Data", _wrap_DListInt16IterC_Data, METH_VARARGS },
	 { (char *)"DListInt16IterC___deref__", _wrap_DListInt16IterC___deref__, METH_VARARGS },
	 { (char *)"delete_DListInt16IterC", _wrap_delete_DListInt16IterC, METH_VARARGS },
	 { (char *)"DListInt16IterC_swigregister", DListInt16IterC_swigregister, METH_VARARGS },
	 { (char *)"new_DListByteC", _wrap_new_DListByteC, METH_VARARGS },
	 { (char *)"DListByteC_Empty", _wrap_DListByteC_Empty, METH_VARARGS },
	 { (char *)"DListByteC_InsFirst", _wrap_DListByteC_InsFirst, METH_VARARGS },
	 { (char *)"DListByteC_InsLast", _wrap_DListByteC_InsLast, METH_VARARGS },
	 { (char *)"DListByteC_PopFirst", _wrap_DListByteC_PopFirst, METH_VARARGS },
	 { (char *)"DListByteC_PopLast", _wrap_DListByteC_PopLast, METH_VARARGS },
	 { (char *)"DListByteC_MoveFirst", _wrap_DListByteC_MoveFirst, METH_VARARGS },
	 { (char *)"DListByteC_MoveLast", _wrap_DListByteC_MoveLast, METH_VARARGS },
	 { (char *)"DListByteC_First", _wrap_DListByteC_First, METH_VARARGS },
	 { (char *)"DListByteC_Last", _wrap_DListByteC_Last, METH_VARARGS },
	 { (char *)"DListByteC_Del", _wrap_DListByteC_Del, METH_VARARGS },
	 { (char *)"DListByteC_Contains", _wrap_DListByteC_Contains, METH_VARARGS },
	 { (char *)"DListByteC_Nth", _wrap_DListByteC_Nth, METH_VARARGS },
	 { (char *)"delete_DListByteC", _wrap_delete_DListByteC, METH_VARARGS },
	 { (char *)"DListByteC_swigregister", DListByteC_swigregister, METH_VARARGS },
	 { (char *)"new_DListByteIterC", _wrap_new_DListByteIterC, METH_VARARGS },
	 { (char *)"DListByteIterC_IsValid", _wrap_DListByteIterC_IsValid, METH_VARARGS },
	 { (char *)"DListByteIterC_First", _wrap_DListByteIterC_First, METH_VARARGS },
	 { (char *)"DListByteIterC_Last", _wrap_DListByteIterC_Last, METH_VARARGS },
	 { (char *)"DListByteIterC_IsElm", _wrap_DListByteIterC_IsElm, METH_VARARGS },
	 { (char *)"DListByteIterC_IsFirst", _wrap_DListByteIterC_IsFirst, METH_VARARGS },
	 { (char *)"DListByteIterC_IsLast", _wrap_DListByteIterC_IsLast, METH_VARARGS },
	 { (char *)"DListByteIterC_Next", _wrap_DListByteIterC_Next, METH_VARARGS },
	 { (char *)"DListByteIterC_Prev", _wrap_DListByteIterC_Prev, METH_VARARGS },
	 { (char *)"DListByteIterC_NextCrc", _wrap_DListByteIterC_NextCrc, METH_VARARGS },
	 { (char *)"DListByteIterC_PrevCrc", _wrap_DListByteIterC_PrevCrc, METH_VARARGS },
	 { (char *)"DListByteIterC_Nth", _wrap_DListByteIterC_Nth, METH_VARARGS },
	 { (char *)"DListByteIterC_NextData", _wrap_DListByteIterC_NextData, METH_VARARGS },
	 { (char *)"DListByteIterC_PrevData", _wrap_DListByteIterC_PrevData, METH_VARARGS },
	 { (char *)"DListByteIterC_NextCrcData", _wrap_DListByteIterC_NextCrcData, METH_VARARGS },
	 { (char *)"DListByteIterC_PrevCrcData", _wrap_DListByteIterC_PrevCrcData, METH_VARARGS },
	 { (char *)"DListByteIterC_Tail", _wrap_DListByteIterC_Tail, METH_VARARGS },
	 { (char *)"DListByteIterC_Head", _wrap_DListByteIterC_Head, METH_VARARGS },
	 { (char *)"DListByteIterC_InclusiveTail", _wrap_DListByteIterC_InclusiveTail, METH_VARARGS },
	 { (char *)"DListByteIterC_InclusiveHead", _wrap_DListByteIterC_InclusiveHead, METH_VARARGS },
	 { (char *)"DListByteIterC_Data", _wrap_DListByteIterC_Data, METH_VARARGS },
	 { (char *)"DListByteIterC___deref__", _wrap_DListByteIterC___deref__, METH_VARARGS },
	 { (char *)"delete_DListByteIterC", _wrap_delete_DListByteIterC, METH_VARARGS },
	 { (char *)"DListByteIterC_swigregister", DListByteIterC_swigregister, METH_VARARGS },
	 { (char *)"new_Point2dC", _wrap_new_Point2dC, METH_VARARGS },
	 { (char *)"Point2dC_Row", _wrap_Point2dC_Row, METH_VARARGS },
	 { (char *)"Point2dC_Col", _wrap_Point2dC_Col, METH_VARARGS },
	 { (char *)"delete_Point2dC", _wrap_delete_Point2dC, METH_VARARGS },
	 { (char *)"Point2dC_swigregister", Point2dC_swigregister, METH_VARARGS },
	 { (char *)"new_DListPoint2dC", _wrap_new_DListPoint2dC, METH_VARARGS },
	 { (char *)"DListPoint2dC_Empty", _wrap_DListPoint2dC_Empty, METH_VARARGS },
	 { (char *)"DListPoint2dC_InsFirst", _wrap_DListPoint2dC_InsFirst, METH_VARARGS },
	 { (char *)"DListPoint2dC_InsLast", _wrap_DListPoint2dC_InsLast, METH_VARARGS },
	 { (char *)"DListPoint2dC_PopFirst", _wrap_DListPoint2dC_PopFirst, METH_VARARGS },
	 { (char *)"DListPoint2dC_PopLast", _wrap_DListPoint2dC_PopLast, METH_VARARGS },
	 { (char *)"DListPoint2dC_MoveFirst", _wrap_DListPoint2dC_MoveFirst, METH_VARARGS },
	 { (char *)"DListPoint2dC_MoveLast", _wrap_DListPoint2dC_MoveLast, METH_VARARGS },
	 { (char *)"DListPoint2dC_First", _wrap_DListPoint2dC_First, METH_VARARGS },
	 { (char *)"DListPoint2dC_Last", _wrap_DListPoint2dC_Last, METH_VARARGS },
	 { (char *)"DListPoint2dC_Del", _wrap_DListPoint2dC_Del, METH_VARARGS },
	 { (char *)"DListPoint2dC_Contains", _wrap_DListPoint2dC_Contains, METH_VARARGS },
	 { (char *)"DListPoint2dC_Nth", _wrap_DListPoint2dC_Nth, METH_VARARGS },
	 { (char *)"delete_DListPoint2dC", _wrap_delete_DListPoint2dC, METH_VARARGS },
	 { (char *)"DListPoint2dC_swigregister", DListPoint2dC_swigregister, METH_VARARGS },
	 { (char *)"new_DListPoint2dIterC", _wrap_new_DListPoint2dIterC, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_IsValid", _wrap_DListPoint2dIterC_IsValid, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_First", _wrap_DListPoint2dIterC_First, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Last", _wrap_DListPoint2dIterC_Last, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_IsElm", _wrap_DListPoint2dIterC_IsElm, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_IsFirst", _wrap_DListPoint2dIterC_IsFirst, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_IsLast", _wrap_DListPoint2dIterC_IsLast, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Next", _wrap_DListPoint2dIterC_Next, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Prev", _wrap_DListPoint2dIterC_Prev, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_NextCrc", _wrap_DListPoint2dIterC_NextCrc, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_PrevCrc", _wrap_DListPoint2dIterC_PrevCrc, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Nth", _wrap_DListPoint2dIterC_Nth, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_NextData", _wrap_DListPoint2dIterC_NextData, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_PrevData", _wrap_DListPoint2dIterC_PrevData, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_NextCrcData", _wrap_DListPoint2dIterC_NextCrcData, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_PrevCrcData", _wrap_DListPoint2dIterC_PrevCrcData, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Tail", _wrap_DListPoint2dIterC_Tail, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Head", _wrap_DListPoint2dIterC_Head, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_InclusiveTail", _wrap_DListPoint2dIterC_InclusiveTail, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_InclusiveHead", _wrap_DListPoint2dIterC_InclusiveHead, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Data", _wrap_DListPoint2dIterC_Data, METH_VARARGS },
	 { (char *)"DListPoint2dIterC___deref__", _wrap_DListPoint2dIterC___deref__, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Row", _wrap_DListPoint2dIterC_Row, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_Col", _wrap_DListPoint2dIterC_Col, METH_VARARGS },
	 { (char *)"delete_DListPoint2dIterC", _wrap_delete_DListPoint2dIterC, METH_VARARGS },
	 { (char *)"DListPoint2dIterC_swigregister", DListPoint2dIterC_swigregister, METH_VARARGS },
	 { (char *)"ToList", _wrap_ToList, METH_VARARGS },
	 { (char *)"new_IndexC", _wrap_new_IndexC, METH_VARARGS },
	 { (char *)"IndexC_V", _wrap_IndexC_V, METH_VARARGS },
	 { (char *)"delete_IndexC", _wrap_delete_IndexC, METH_VARARGS },
	 { (char *)"IndexC_swigregister", IndexC_swigregister, METH_VARARGS },
	 { (char *)"new_Index2dC", _wrap_new_Index2dC, METH_VARARGS },
	 { (char *)"Index2dC_Row", _wrap_Index2dC_Row, METH_VARARGS },
	 { (char *)"Index2dC_Col", _wrap_Index2dC_Col, METH_VARARGS },
	 { (char *)"delete_Index2dC", _wrap_delete_Index2dC, METH_VARARGS },
	 { (char *)"Index2dC_swigregister", Index2dC_swigregister, METH_VARARGS },
	 { (char *)"new_IndexRange2dC", _wrap_new_IndexRange2dC, METH_VARARGS },
	 { (char *)"IndexRange2dC_Rows", _wrap_IndexRange2dC_Rows, METH_VARARGS },
	 { (char *)"IndexRange2dC_Cols", _wrap_IndexRange2dC_Cols, METH_VARARGS },
	 { (char *)"IndexRange2dC_Area", _wrap_IndexRange2dC_Area, METH_VARARGS },
	 { (char *)"IndexRange2dC_Contains", _wrap_IndexRange2dC_Contains, METH_VARARGS },
	 { (char *)"IndexRange2dC_Expand", _wrap_IndexRange2dC_Expand, METH_VARARGS },
	 { (char *)"IndexRange2dC_ClipBy", _wrap_IndexRange2dC_ClipBy, METH_VARARGS },
	 { (char *)"delete_IndexRange2dC", _wrap_delete_IndexRange2dC, METH_VARARGS },
	 { (char *)"IndexRange2dC_swigregister", IndexRange2dC_swigregister, METH_VARARGS },
	 { (char *)"new_Array2dByteC", _wrap_new_Array2dByteC, METH_VARARGS },
	 { (char *)"Array2dByteC_Frame", _wrap_Array2dByteC_Frame, METH_VARARGS },
	 { (char *)"Array2dByteC_Fill", _wrap_Array2dByteC_Fill, METH_VARARGS },
	 { (char *)"Array2dByteC_Stride", _wrap_Array2dByteC_Stride, METH_VARARGS },
	 { (char *)"Array2dByteC_Access", _wrap_Array2dByteC_Access, METH_VARARGS },
	 { (char *)"delete_Array2dByteC", _wrap_delete_Array2dByteC, METH_VARARGS },
	 { (char *)"Array2dByteC_swigregister", Array2dByteC_swigregister, METH_VARARGS },
	 { (char *)"new_Array2dRealC", _wrap_new_Array2dRealC, METH_VARARGS },
	 { (char *)"Array2dRealC_Frame", _wrap_Array2dRealC_Frame, METH_VARARGS },
	 { (char *)"Array2dRealC_Fill", _wrap_Array2dRealC_Fill, METH_VARARGS },
	 { (char *)"Array2dRealC_Stride", _wrap_Array2dRealC_Stride, METH_VARARGS },
	 { (char *)"Array2dRealC_Access", _wrap_Array2dRealC_Access, METH_VARARGS },
	 { (char *)"delete_Array2dRealC", _wrap_delete_Array2dRealC, METH_VARARGS },
	 { (char *)"Array2dRealC_swigregister", Array2dRealC_swigregister, METH_VARARGS },
	 { (char *)"new_StringC", _wrap_new_StringC, METH_VARARGS },
	 { (char *)"StringC_IsEmpty", _wrap_StringC_IsEmpty, METH_VARARGS },
	 { (char *)"StringC_chars", _wrap_StringC_chars, METH_VARARGS },
	 { (char *)"StringC_Size", _wrap_StringC_Size, METH_VARARGS },
	 { (char *)"StringC___str__", _wrap_StringC___str__, METH_VARARGS },
	 { (char *)"delete_StringC", _wrap_delete_StringC, METH_VARARGS },
	 { (char *)"StringC_swigregister", StringC_swigregister, METH_VARARGS },
	 { (char *)"PrintIOFormats", _wrap_PrintIOFormats, METH_VARARGS },
	 { (char *)"PrintIOConversions", _wrap_PrintIOConversions, METH_VARARGS },
	 { (char *)"PrintIOClassTypes", _wrap_PrintIOClassTypes, METH_VARARGS },
	 { (char *)"new_RealRangeC", _wrap_new_RealRangeC, METH_VARARGS },
	 { (char *)"RealRangeC_Size", _wrap_RealRangeC_Size, METH_VARARGS },
	 { (char *)"RealRangeC_Range", _wrap_RealRangeC_Range, METH_VARARGS },
	 { (char *)"RealRangeC_Min", _wrap_RealRangeC_Min, METH_VARARGS },
	 { (char *)"RealRangeC_Max", _wrap_RealRangeC_Max, METH_VARARGS },
	 { (char *)"RealRangeC_Center", _wrap_RealRangeC_Center, METH_VARARGS },
	 { (char *)"RealRangeC_CenterD", _wrap_RealRangeC_CenterD, METH_VARARGS },
	 { (char *)"RealRangeC_Percentage", _wrap_RealRangeC_Percentage, METH_VARARGS },
	 { (char *)"RealRangeC_IsEmpty", _wrap_RealRangeC_IsEmpty, METH_VARARGS },
	 { (char *)"RealRangeC_IsValid", _wrap_RealRangeC_IsValid, METH_VARARGS },
	 { (char *)"RealRangeC_Contains", _wrap_RealRangeC_Contains, METH_VARARGS },
	 { (char *)"RealRangeC___eq__", _wrap_RealRangeC___eq__, METH_VARARGS },
	 { (char *)"RealRangeC___ne__", _wrap_RealRangeC___ne__, METH_VARARGS },
	 { (char *)"RealRangeC_In", _wrap_RealRangeC_In, METH_VARARGS },
	 { (char *)"RealRangeC_IsOverlapping", _wrap_RealRangeC_IsOverlapping, METH_VARARGS },
	 { (char *)"RealRangeC_SetOrigin", _wrap_RealRangeC_SetOrigin, METH_VARARGS },
	 { (char *)"RealRangeC___iadd__", _wrap_RealRangeC___iadd__, METH_VARARGS },
	 { (char *)"RealRangeC___isub__", _wrap_RealRangeC___isub__, METH_VARARGS },
	 { (char *)"RealRangeC___add__", _wrap_RealRangeC___add__, METH_VARARGS },
	 { (char *)"RealRangeC___sub__", _wrap_RealRangeC___sub__, METH_VARARGS },
	 { (char *)"RealRangeC_ClipBy", _wrap_RealRangeC_ClipBy, METH_VARARGS },
	 { (char *)"RealRangeC_Clip", _wrap_RealRangeC_Clip, METH_VARARGS },
	 { (char *)"RealRangeC_FirstHalf", _wrap_RealRangeC_FirstHalf, METH_VARARGS },
	 { (char *)"RealRangeC_FirstHalfD", _wrap_RealRangeC_FirstHalfD, METH_VARARGS },
	 { (char *)"RealRangeC_Enlarge", _wrap_RealRangeC_Enlarge, METH_VARARGS },
	 { (char *)"RealRangeC_Expand", _wrap_RealRangeC_Expand, METH_VARARGS },
	 { (char *)"RealRangeC_Shrink", _wrap_RealRangeC_Shrink, METH_VARARGS },
	 { (char *)"RealRangeC_ShrinkHigh", _wrap_RealRangeC_ShrinkHigh, METH_VARARGS },
	 { (char *)"RealRangeC_Swap", _wrap_RealRangeC_Swap, METH_VARARGS },
	 { (char *)"RealRangeC_Involve", _wrap_RealRangeC_Involve, METH_VARARGS },
	 { (char *)"delete_RealRangeC", _wrap_delete_RealRangeC, METH_VARARGS },
	 { (char *)"RealRangeC_swigregister", RealRangeC_swigregister, METH_VARARGS },
	 { (char *)"new_RealRange2dC", _wrap_new_RealRange2dC, METH_VARARGS },
	 { (char *)"RealRange2dC_TRow", _wrap_RealRange2dC_TRow, METH_VARARGS },
	 { (char *)"RealRange2dC_LCol", _wrap_RealRange2dC_LCol, METH_VARARGS },
	 { (char *)"RealRange2dC_BRow", _wrap_RealRange2dC_BRow, METH_VARARGS },
	 { (char *)"RealRange2dC_RCol", _wrap_RealRange2dC_RCol, METH_VARARGS },
	 { (char *)"RealRange2dC_Rows", _wrap_RealRange2dC_Rows, METH_VARARGS },
	 { (char *)"RealRange2dC_Cols", _wrap_RealRange2dC_Cols, METH_VARARGS },
	 { (char *)"RealRange2dC_Area", _wrap_RealRange2dC_Area, METH_VARARGS },
	 { (char *)"RealRange2dC_Dilate", _wrap_RealRange2dC_Dilate, METH_VARARGS },
	 { (char *)"RealRange2dC_Erode", _wrap_RealRange2dC_Erode, METH_VARARGS },
	 { (char *)"RealRange2dC_Expand", _wrap_RealRange2dC_Expand, METH_VARARGS },
	 { (char *)"RealRange2dC_Shrink", _wrap_RealRange2dC_Shrink, METH_VARARGS },
	 { (char *)"RealRange2dC_ClipBy", _wrap_RealRange2dC_ClipBy, METH_VARARGS },
	 { (char *)"RealRange2dC_Contains", _wrap_RealRange2dC_Contains, METH_VARARGS },
	 { (char *)"RealRange2dC_RowRange", _wrap_RealRange2dC_RowRange, METH_VARARGS },
	 { (char *)"RealRange2dC_ColRange", _wrap_RealRange2dC_ColRange, METH_VARARGS },
	 { (char *)"RealRange2dC_Range1", _wrap_RealRange2dC_Range1, METH_VARARGS },
	 { (char *)"RealRange2dC_Range2", _wrap_RealRange2dC_Range2, METH_VARARGS },
	 { (char *)"RealRange2dC_Involve", _wrap_RealRange2dC_Involve, METH_VARARGS },
	 { (char *)"RealRange2dC_IsValid", _wrap_RealRange2dC_IsValid, METH_VARARGS },
	 { (char *)"RealRange2dC___eq__", _wrap_RealRange2dC___eq__, METH_VARARGS },
	 { (char *)"RealRange2dC___ne__", _wrap_RealRange2dC___ne__, METH_VARARGS },
	 { (char *)"RealRange2dC_IsOverlapping", _wrap_RealRange2dC_IsOverlapping, METH_VARARGS },
	 { (char *)"delete_RealRange2dC", _wrap_delete_RealRange2dC, METH_VARARGS },
	 { (char *)"RealRange2dC_swigregister", RealRange2dC_swigregister, METH_VARARGS },
	 { (char *)"new_PointSet2dC", _wrap_new_PointSet2dC, METH_VARARGS },
	 { (char *)"PointSet2dC_Centroid", _wrap_PointSet2dC_Centroid, METH_VARARGS },
	 { (char *)"PointSet2dC_BoundingRectangle", _wrap_PointSet2dC_BoundingRectangle, METH_VARARGS },
	 { (char *)"delete_PointSet2dC", _wrap_delete_PointSet2dC, METH_VARARGS },
	 { (char *)"PointSet2dC_swigregister", PointSet2dC_swigregister, METH_VARARGS },
	 { (char *)"new_Polygon2dC", _wrap_new_Polygon2dC, METH_VARARGS },
	 { (char *)"Polygon2dC_InsLast", _wrap_Polygon2dC_InsLast, METH_VARARGS },
	 { (char *)"Polygon2dC_Size", _wrap_Polygon2dC_Size, METH_VARARGS },
	 { (char *)"delete_Polygon2dC", _wrap_delete_Polygon2dC, METH_VARARGS },
	 { (char *)"Polygon2dC_swigregister", Polygon2dC_swigregister, METH_VARARGS },
	 { (char *)"new_ByteRGBArray2dC", _wrap_new_ByteRGBArray2dC, METH_VARARGS },
	 { (char *)"ByteRGBArray2dC_Frame", _wrap_ByteRGBArray2dC_Frame, METH_VARARGS },
	 { (char *)"ByteRGBArray2dC_Fill", _wrap_ByteRGBArray2dC_Fill, METH_VARARGS },
	 { (char *)"ByteRGBArray2dC_Stride", _wrap_ByteRGBArray2dC_Stride, METH_VARARGS },
	 { (char *)"ByteRGBArray2dC_Access", _wrap_ByteRGBArray2dC_Access, METH_VARARGS },
	 { (char *)"delete_ByteRGBArray2dC", _wrap_delete_ByteRGBArray2dC, METH_VARARGS },
	 { (char *)"ByteRGBArray2dC_swigregister", ByteRGBArray2dC_swigregister, METH_VARARGS },
	 { (char *)"new_RealRGBArray2dC", _wrap_new_RealRGBArray2dC, METH_VARARGS },
	 { (char *)"RealRGBArray2dC_Frame", _wrap_RealRGBArray2dC_Frame, METH_VARARGS },
	 { (char *)"RealRGBArray2dC_Fill", _wrap_RealRGBArray2dC_Fill, METH_VARARGS },
	 { (char *)"RealRGBArray2dC_Stride", _wrap_RealRGBArray2dC_Stride, METH_VARARGS },
	 { (char *)"RealRGBArray2dC_Access", _wrap_RealRGBArray2dC_Access, METH_VARARGS },
	 { (char *)"delete_RealRGBArray2dC", _wrap_delete_RealRGBArray2dC, METH_VARARGS },
	 { (char *)"RealRGBArray2dC_swigregister", RealRGBArray2dC_swigregister, METH_VARARGS },
	 { (char *)"new_RealRGBValueC", _wrap_new_RealRGBValueC, METH_VARARGS },
	 { (char *)"RealRGBValueC_Red", _wrap_RealRGBValueC_Red, METH_VARARGS },
	 { (char *)"RealRGBValueC_Green", _wrap_RealRGBValueC_Green, METH_VARARGS },
	 { (char *)"RealRGBValueC_Blue", _wrap_RealRGBValueC_Blue, METH_VARARGS },
	 { (char *)"delete_RealRGBValueC", _wrap_delete_RealRGBValueC, METH_VARARGS },
	 { (char *)"RealRGBValueC_swigregister", RealRGBValueC_swigregister, METH_VARARGS },
	 { (char *)"new_ByteRGBValueC", _wrap_new_ByteRGBValueC, METH_VARARGS },
	 { (char *)"ByteRGBValueC_Red", _wrap_ByteRGBValueC_Red, METH_VARARGS },
	 { (char *)"ByteRGBValueC_Green", _wrap_ByteRGBValueC_Green, METH_VARARGS },
	 { (char *)"ByteRGBValueC_Blue", _wrap_ByteRGBValueC_Blue, METH_VARARGS },
	 { (char *)"delete_ByteRGBValueC", _wrap_delete_ByteRGBValueC, METH_VARARGS },
	 { (char *)"ByteRGBValueC_swigregister", ByteRGBValueC_swigregister, METH_VARARGS },
	 { (char *)"new_ImageByteRGBValueC", _wrap_new_ImageByteRGBValueC, METH_VARARGS },
	 { (char *)"ImageByteRGBValueC_Rows", _wrap_ImageByteRGBValueC_Rows, METH_VARARGS },
	 { (char *)"ImageByteRGBValueC_Cols", _wrap_ImageByteRGBValueC_Cols, METH_VARARGS },
	 { (char *)"delete_ImageByteRGBValueC", _wrap_delete_ImageByteRGBValueC, METH_VARARGS },
	 { (char *)"ImageByteRGBValueC_swigregister", ImageByteRGBValueC_swigregister, METH_VARARGS },
	 { (char *)"new_ByteRGBImageC", _wrap_new_ByteRGBImageC, METH_VARARGS },
	 { (char *)"ByteRGBImageC_Rows", _wrap_ByteRGBImageC_Rows, METH_VARARGS },
	 { (char *)"ByteRGBImageC_Cols", _wrap_ByteRGBImageC_Cols, METH_VARARGS },
	 { (char *)"delete_ByteRGBImageC", _wrap_delete_ByteRGBImageC, METH_VARARGS },
	 { (char *)"ByteRGBImageC_swigregister", ByteRGBImageC_swigregister, METH_VARARGS },
	 { (char *)"new_ImageByteC", _wrap_new_ImageByteC, METH_VARARGS },
	 { (char *)"ImageByteC_Rows", _wrap_ImageByteC_Rows, METH_VARARGS },
	 { (char *)"ImageByteC_Cols", _wrap_ImageByteC_Cols, METH_VARARGS },
	 { (char *)"delete_ImageByteC", _wrap_delete_ImageByteC, METH_VARARGS },
	 { (char *)"ImageByteC_swigregister", ImageByteC_swigregister, METH_VARARGS },
	 { (char *)"Save", _wrap_Save, METH_VARARGS },
	 { (char *)"Load", _wrap_Load, METH_VARARGS },
	 { (char *)"DrawPolygon", _wrap_DrawPolygon, METH_VARARGS },
	 { (char *)"new_FontC", _wrap_new_FontC, METH_VARARGS },
	 { (char *)"FontC_IsValid", _wrap_FontC_IsValid, METH_VARARGS },
	 { (char *)"FontC_Center", _wrap_FontC_Center, METH_VARARGS },
	 { (char *)"FontC_Size", _wrap_FontC_Size, METH_VARARGS },
	 { (char *)"FontC_Count", _wrap_FontC_Count, METH_VARARGS },
	 { (char *)"delete_FontC", _wrap_delete_FontC, METH_VARARGS },
	 { (char *)"FontC_swigregister", FontC_swigregister, METH_VARARGS },
	 { (char *)"DefaultFont", _wrap_DefaultFont, METH_VARARGS },
	 { (char *)"DrawText", _wrap_DrawText, METH_VARARGS },
	 { (char *)"DrawTextCenter", _wrap_DrawTextCenter, METH_VARARGS },
	 { (char *)"new_Affine2dC", _wrap_new_Affine2dC, METH_VARARGS },
	 { (char *)"delete_Affine2dC", _wrap_delete_Affine2dC, METH_VARARGS },
	 { (char *)"Affine2dC_swigregister", Affine2dC_swigregister, METH_VARARGS },
	 { (char *)"DateC_NowUTC", _wrap_DateC_NowUTC, METH_VARARGS },
	 { (char *)"DateC_NowLocal", _wrap_DateC_NowLocal, METH_VARARGS },
	 { (char *)"DateC_NowVirtual", _wrap_DateC_NowVirtual, METH_VARARGS },
	 { (char *)"DateC_TimeZoneOffset", _wrap_DateC_TimeZoneOffset, METH_VARARGS },
	 { (char *)"new_DateC", _wrap_new_DateC, METH_VARARGS },
	 { (char *)"DateC_IsLeapYear", _wrap_DateC_IsLeapYear, METH_VARARGS },
	 { (char *)"DateC_YearToDaysSince1970", _wrap_DateC_YearToDaysSince1970, METH_VARARGS },
	 { (char *)"DateC_IsValid", _wrap_DateC_IsValid, METH_VARARGS },
	 { (char *)"DateC_IsZero", _wrap_DateC_IsZero, METH_VARARGS },
	 { (char *)"DateC_SetInvalid", _wrap_DateC_SetInvalid, METH_VARARGS },
	 { (char *)"DateC_SetToNow", _wrap_DateC_SetToNow, METH_VARARGS },
	 { (char *)"DateC_MaxUSeconds", _wrap_DateC_MaxUSeconds, METH_VARARGS },
	 { (char *)"DateC_Resolution", _wrap_DateC_Resolution, METH_VARARGS },
	 { (char *)"DateC_NormalisePos", _wrap_DateC_NormalisePos, METH_VARARGS },
	 { (char *)"DateC_NormaliseNeg", _wrap_DateC_NormaliseNeg, METH_VARARGS },
	 { (char *)"DateC___eq__", _wrap_DateC___eq__, METH_VARARGS },
	 { (char *)"DateC___ne__", _wrap_DateC___ne__, METH_VARARGS },
	 { (char *)"DateC___gt__", _wrap_DateC___gt__, METH_VARARGS },
	 { (char *)"DateC___lt__", _wrap_DateC___lt__, METH_VARARGS },
	 { (char *)"DateC___ge__", _wrap_DateC___ge__, METH_VARARGS },
	 { (char *)"DateC___le__", _wrap_DateC___le__, METH_VARARGS },
	 { (char *)"DateC___add__", _wrap_DateC___add__, METH_VARARGS },
	 { (char *)"DateC___sub__", _wrap_DateC___sub__, METH_VARARGS },
	 { (char *)"DateC___isub__", _wrap_DateC___isub__, METH_VARARGS },
	 { (char *)"DateC___iadd__", _wrap_DateC___iadd__, METH_VARARGS },
	 { (char *)"DateC_Text", _wrap_DateC_Text, METH_VARARGS },
	 { (char *)"DateC_ODBC", _wrap_DateC_ODBC, METH_VARARGS },
	 { (char *)"DateC_SetODBC", _wrap_DateC_SetODBC, METH_VARARGS },
	 { (char *)"DateC_CTime", _wrap_DateC_CTime, METH_VARARGS },
	 { (char *)"DateC_CTimeShort", _wrap_DateC_CTimeShort, METH_VARARGS },
	 { (char *)"DateC_USeconds", _wrap_DateC_USeconds, METH_VARARGS },
	 { (char *)"DateC_TotalSeconds", _wrap_DateC_TotalSeconds, METH_VARARGS },
	 { (char *)"DateC_Double", _wrap_DateC_Double, METH_VARARGS },
	 { (char *)"DateC_Seconds", _wrap_DateC_Seconds, METH_VARARGS },
	 { (char *)"DateC_Minute", _wrap_DateC_Minute, METH_VARARGS },
	 { (char *)"DateC_Hour", _wrap_DateC_Hour, METH_VARARGS },
	 { (char *)"DateC_Month", _wrap_DateC_Month, METH_VARARGS },
	 { (char *)"DateC_Year", _wrap_DateC_Year, METH_VARARGS },
	 { (char *)"DateC_DayInMonth", _wrap_DateC_DayInMonth, METH_VARARGS },
	 { (char *)"DateC_DayInYear", _wrap_DateC_DayInYear, METH_VARARGS },
	 { (char *)"DateC_DayInWeek", _wrap_DateC_DayInWeek, METH_VARARGS },
	 { (char *)"DateC_TextDayInWeek", _wrap_DateC_TextDayInWeek, METH_VARARGS },
	 { (char *)"DateC_DaylightSaving", _wrap_DateC_DaylightSaving, METH_VARARGS },
	 { (char *)"DateC_Wait", _wrap_DateC_Wait, METH_VARARGS },
	 { (char *)"delete_DateC", _wrap_delete_DateC, METH_VARARGS },
	 { (char *)"DateC_swigregister", DateC_swigregister, METH_VARARGS },
	 { (char *)"new_HashInt64Int64C", _wrap_new_HashInt64Int64C, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Lookup", _wrap_HashInt64Int64C_Lookup, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Update", _wrap_HashInt64Int64C_Update, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Insert", _wrap_HashInt64Int64C_Insert, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Access", _wrap_HashInt64Int64C_Access, METH_VARARGS },
	 { (char *)"HashInt64Int64C_AccessCopy", _wrap_HashInt64Int64C_AccessCopy, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Del", _wrap_HashInt64Int64C_Del, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Get", _wrap_HashInt64Int64C_Get, METH_VARARGS },
	 { (char *)"HashInt64Int64C_IsElm", _wrap_HashInt64Int64C_IsElm, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Empty", _wrap_HashInt64Int64C_Empty, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Bins", _wrap_HashInt64Int64C_Bins, METH_VARARGS },
	 { (char *)"HashInt64Int64C_Resize", _wrap_HashInt64Int64C_Resize, METH_VARARGS },
	 { (char *)"delete_HashInt64Int64C", _wrap_delete_HashInt64Int64C, METH_VARARGS },
	 { (char *)"HashInt64Int64C_swigregister", HashInt64Int64C_swigregister, METH_VARARGS },
	 { (char *)"new_HashInt64Int64IterC", _wrap_new_HashInt64Int64IterC, METH_VARARGS },
	 { (char *)"HashInt64Int64IterC_First", _wrap_HashInt64Int64IterC_First, METH_VARARGS },
	 { (char *)"HashInt64Int64IterC_Next", _wrap_HashInt64Int64IterC_Next, METH_VARARGS },
	 { (char *)"HashInt64Int64IterC_IsElm", _wrap_HashInt64Int64IterC_IsElm, METH_VARARGS },
	 { (char *)"HashInt64Int64IterC_Key", _wrap_HashInt64Int64IterC_Key, METH_VARARGS },
	 { (char *)"HashInt64Int64IterC_Data", _wrap_HashInt64Int64IterC_Data, METH_VARARGS },
	 { (char *)"HashInt64Int64IterC_Del", _wrap_HashInt64Int64IterC_Del, METH_VARARGS },
	 { (char *)"delete_HashInt64Int64IterC", _wrap_delete_HashInt64Int64IterC, METH_VARARGS },
	 { (char *)"HashInt64Int64IterC_swigregister", HashInt64Int64IterC_swigregister, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_tTo_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t(void *x) {
    return (void *)((RavlN::Array2dC<RavlImageN::ByteRGBValueC > *)  ((RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *) x));
}
static void *_p_RavlImageN__ImageCTunsigned_char_tTo_p_RavlN__Array2dCTunsigned_char_t(void *x) {
    return (void *)((RavlN::Array2dC<unsigned char > *)  ((RavlImageN::ImageC<unsigned char > *) x));
}
static void *_p_RavlN__Polygon2dCTo_p_RavlN__DListCTRavlN__Point2dC_t(void *x) {
    return (void *)((RavlN::DListC<RavlN::Point2dC > *) (RavlN::PointSet2dC *) ((RavlN::Polygon2dC *) x));
}
static void *_p_RavlN__PointSet2dCTo_p_RavlN__DListCTRavlN__Point2dC_t(void *x) {
    return (void *)((RavlN::DListC<RavlN::Point2dC > *)  ((RavlN::PointSet2dC *) x));
}
static void *_p_RavlN__Polygon2dCTo_p_RavlN__PointSet2dC(void *x) {
    return (void *)((RavlN::PointSet2dC *)  ((RavlN::Polygon2dC *) x));
}
static swig_type_info _swigt__p_RavlN__DLIterCTunsigned_char_t[] = {{"_p_RavlN__DLIterCTunsigned_char_t", 0, "RavlN::DLIterC<RavlN::ByteT > *", 0},{"_p_RavlN__DLIterCTunsigned_char_t"},{0}};
static swig_type_info _swigt__p_RavlN__DListCTunsigned_char_t[] = {{"_p_RavlN__DListCTunsigned_char_t", 0, "RavlN::DListC<RavlN::ByteT > *", 0},{"_p_RavlN__DListCTunsigned_char_t"},{0}};
static swig_type_info _swigt__p_RavlN__Array2dCTunsigned_char_t[] = {{"_p_RavlN__Array2dCTunsigned_char_t", 0, "RavlN::Array2dC<RavlN::ByteT > *", 0},{"_p_RavlN__Array2dCTunsigned_char_t"},{"_p_RavlImageN__ImageCTunsigned_char_t", _p_RavlImageN__ImageCTunsigned_char_tTo_p_RavlN__Array2dCTunsigned_char_t},{0}};
static swig_type_info _swigt__p_RavlImageN__ImageCTunsigned_char_t[] = {{"_p_RavlImageN__ImageCTunsigned_char_t", 0, "RavlImageN::ImageC<RavlN::ByteT > *", 0},{"_p_RavlImageN__ImageCTunsigned_char_t"},{0}};
static swig_type_info _swigt__p_RavlN__Int64T[] = {{"_p_RavlN__Int64T", 0, "RavlN::Int64T *", 0},{"_p_RavlN__Int64T"},{0}};
static swig_type_info _swigt__p_RavlN__Affine2dC[] = {{"_p_RavlN__Affine2dC", 0, "RavlN::Affine2dC *", 0},{"_p_RavlN__Affine2dC"},{0}};
static swig_type_info _swigt__p_RavlN__Point2dC[] = {{"_p_RavlN__Point2dC", 0, "RavlN::Point2dC *", 0},{"_p_RavlN__Point2dC"},{0}};
static swig_type_info _swigt__p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t[] = {{"_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t", 0, "RavlN::Array2dC<RavlImageN::ByteRGBValueC > *", 0},{"_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t"},{"_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t", _p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_tTo_p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t},{0}};
static swig_type_info _swigt__p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t[] = {{"_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t", 0, "RavlN::Array2dC<RavlImageN::RealRGBValueC > *", 0},{"_p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t"},{0}};
static swig_type_info _swigt__p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t[] = {{"_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t", 0, "RavlImageN::ImageC<RavlImageN::ByteRGBValueC > *", 0},{"_p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t"},{0}};
static swig_type_info _swigt__p_RavlN__Index2dC[] = {{"_p_RavlN__Index2dC", 0, "RavlN::Index2dC *", 0},{"_p_RavlN__Index2dC"},{0}};
static swig_type_info _swigt__p_RavlN__Polygon2dC[] = {{"_p_RavlN__Polygon2dC", 0, "RavlN::Polygon2dC *", 0},{"_p_RavlN__Polygon2dC"},{0}};
static swig_type_info _swigt__p_RavlN__IndexC[] = {{"_p_RavlN__IndexC", 0, "RavlN::IndexC *", 0},{"_p_RavlN__IndexC"},{0}};
static swig_type_info _swigt__p_RavlN__RealRange2dC[] = {{"_p_RavlN__RealRange2dC", 0, "RavlN::RealRange2dC *", 0},{"_p_RavlN__RealRange2dC"},{0}};
static swig_type_info _swigt__p_RavlN__IndexRange2dC[] = {{"_p_RavlN__IndexRange2dC", 0, "RavlN::IndexRange2dC *", 0},{"_p_RavlN__IndexRange2dC"},{0}};
static swig_type_info _swigt__p_RavlImageN__FontC[] = {{"_p_RavlImageN__FontC", 0, "RavlImageN::FontC *", 0},{"_p_RavlImageN__FontC"},{0}};
static swig_type_info _swigt__p_RavlN__RealRangeC[] = {{"_p_RavlN__RealRangeC", 0, "RavlN::RealRangeC *", 0},{"_p_RavlN__RealRangeC"},{0}};
static swig_type_info _swigt__p_RavlN__DLIterCTRavlN__Point2dC_t[] = {{"_p_RavlN__DLIterCTRavlN__Point2dC_t", 0, "RavlN::DLIterC<RavlN::Point2dC > *", 0},{"_p_RavlN__DLIterCTRavlN__Point2dC_t"},{0}};
static swig_type_info _swigt__p_RavlN__DListCTRavlN__Point2dC_t[] = {{"_p_RavlN__DListCTRavlN__Point2dC_t", 0, "RavlN::DListC<RavlN::Point2dC > *", 0},{"_p_RavlN__Polygon2dC", _p_RavlN__Polygon2dCTo_p_RavlN__DListCTRavlN__Point2dC_t},{"_p_RavlN__DListCTRavlN__Point2dC_t"},{"_p_RavlN__PointSet2dC", _p_RavlN__PointSet2dCTo_p_RavlN__DListCTRavlN__Point2dC_t},{0}};
static swig_type_info _swigt__p_RavlN__Array2dCTdouble_t[] = {{"_p_RavlN__Array2dCTdouble_t", 0, "RavlN::Array2dC<RavlN::RealT > *", 0},{"_p_RavlN__Array2dCTdouble_t"},{0}};
static swig_type_info _swigt__p_RavlN__DListCTdouble_t[] = {{"_p_RavlN__DListCTdouble_t", 0, "RavlN::DListC<RavlN::RealT > *", 0},{"_p_RavlN__DListCTdouble_t"},{0}};
static swig_type_info _swigt__p_RavlN__DLIterCTdouble_t[] = {{"_p_RavlN__DLIterCTdouble_t", 0, "RavlN::DLIterC<RavlN::RealT > *", 0},{"_p_RavlN__DLIterCTdouble_t"},{0}};
static swig_type_info _swigt__p_RavlImageN__ImageCTdouble_t[] = {{"_p_RavlImageN__ImageCTdouble_t", 0, "RavlImageN::ImageC<RavlN::RealT > *", 0},{"_p_RavlImageN__ImageCTdouble_t"},{0}};
static swig_type_info _swigt__p_RavlN__Int16T[] = {{"_p_RavlN__Int16T", 0, "RavlN::Int16T *", 0},{"_p_RavlN__Int16T"},{0}};
static swig_type_info _swigt__p_RavlN__DListCTunsigned_int_t[] = {{"_p_RavlN__DListCTunsigned_int_t", 0, "RavlN::DListC<RavlN::UIntT > *", 0},{"_p_RavlN__DListCTunsigned_int_t"},{0}};
static swig_type_info _swigt__p_RavlN__DLIterCTunsigned_int_t[] = {{"_p_RavlN__DLIterCTunsigned_int_t", 0, "RavlN::DLIterC<RavlN::UIntT > *", 0},{"_p_RavlN__DLIterCTunsigned_int_t"},{0}};
static swig_type_info _swigt__p_RavlN__PointSet2dC[] = {{"_p_RavlN__PointSet2dC", 0, "RavlN::PointSet2dC *", 0},{"_p_RavlN__Polygon2dC", _p_RavlN__Polygon2dCTo_p_RavlN__PointSet2dC},{"_p_RavlN__PointSet2dC"},{0}};
static swig_type_info _swigt__p_RavlN__ByteT[] = {{"_p_RavlN__ByteT", 0, "RavlN::ByteT const *", 0},{"_p_RavlN__ByteT"},{0}};
static swig_type_info _swigt__p_RavlN__UIntT[] = {{"_p_RavlN__UIntT", 0, "RavlN::UIntT *", 0},{"_p_RavlN__UIntT"},{0}};
static swig_type_info _swigt__p_RavlN__RealT[] = {{"_p_RavlN__RealT", 0, "RavlN::RealT *", 0},{"_p_RavlN__RealT"},{0}};
static swig_type_info _swigt__p_std__ostream[] = {{"_p_std__ostream", 0, "std::ostream *", 0},{"_p_std__ostream"},{0}};
static swig_type_info _swigt__p_RavlImageN__ByteRGBValueC[] = {{"_p_RavlImageN__ByteRGBValueC", 0, "RavlImageN::ByteRGBValueC *", 0},{"_p_RavlImageN__ByteRGBValueC"},{0}};
static swig_type_info _swigt__p_RavlN__DLIterCTlong_long_t[] = {{"_p_RavlN__DLIterCTlong_long_t", 0, "RavlN::DLIterC<RavlN::Int64T > *", 0},{"_p_RavlN__DLIterCTlong_long_t"},{0}};
static swig_type_info _swigt__p_RavlN__DListCTlong_long_t[] = {{"_p_RavlN__DListCTlong_long_t", 0, "RavlN::DListC<RavlN::Int64T > *", 0},{"_p_RavlN__DListCTlong_long_t"},{0}};
static swig_type_info _swigt__p_RavlImageN__RealRGBValueC[] = {{"_p_RavlImageN__RealRGBValueC", 0, "RavlImageN::RealRGBValueC *", 0},{"_p_RavlImageN__RealRGBValueC"},{0}};
static swig_type_info _swigt__p_RavlN__HashCTlong_long_long_long_t[] = {{"_p_RavlN__HashCTlong_long_long_long_t", 0, "RavlN::HashC<RavlN::Int64T,RavlN::Int64T > const *", 0},{"_p_RavlN__HashCTlong_long_long_long_t"},{0}};
static swig_type_info _swigt__p_RavlN__HashIterCTlong_long_long_long_t[] = {{"_p_RavlN__HashIterCTlong_long_long_long_t", 0, "RavlN::HashIterC<RavlN::Int64T,RavlN::Int64T > *", 0},{"_p_RavlN__HashIterCTlong_long_long_long_t"},{0}};
static swig_type_info _swigt__p_RavlN__IntT[] = {{"_p_RavlN__IntT", 0, "RavlN::IntT *", 0},{"_p_RavlN__IntT"},{0}};
static swig_type_info _swigt__p_RavlN__DListCTint_t[] = {{"_p_RavlN__DListCTint_t", 0, "RavlN::DListC<RavlN::IntT > *", 0},{"_p_RavlN__DListCTint_t"},{0}};
static swig_type_info _swigt__p_RavlN__DLIterCTint_t[] = {{"_p_RavlN__DLIterCTint_t", 0, "RavlN::DLIterC<RavlN::IntT > *", 0},{"_p_RavlN__DLIterCTint_t"},{0}};
static swig_type_info _swigt__p_RavlN__DLIterCTshort_t[] = {{"_p_RavlN__DLIterCTshort_t", 0, "RavlN::DLIterC<RavlN::Int16T > *", 0},{"_p_RavlN__DLIterCTshort_t"},{0}};
static swig_type_info _swigt__p_RavlN__DListCTshort_t[] = {{"_p_RavlN__DListCTshort_t", 0, "RavlN::DListC<RavlN::Int16T > *", 0},{"_p_RavlN__DListCTshort_t"},{0}};
static swig_type_info _swigt__p_RavlN__DateC[] = {{"_p_RavlN__DateC", 0, "RavlN::DateC *", 0},{"_p_RavlN__DateC"},{0}};
static swig_type_info _swigt__p_RavlN__StringC[] = {{"_p_RavlN__StringC", 0, "RavlN::StringC *", 0},{"_p_RavlN__StringC"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_RavlN__DLIterCTunsigned_char_t, 
_swigt__p_RavlN__DListCTunsigned_char_t, 
_swigt__p_RavlN__Array2dCTunsigned_char_t, 
_swigt__p_RavlImageN__ImageCTunsigned_char_t, 
_swigt__p_RavlN__Int64T, 
_swigt__p_RavlN__Affine2dC, 
_swigt__p_RavlN__Point2dC, 
_swigt__p_RavlN__Array2dCTRavlImageN__ByteRGBValueC_t, 
_swigt__p_RavlN__Array2dCTRavlImageN__RealRGBValueC_t, 
_swigt__p_RavlImageN__ImageCTRavlImageN__ByteRGBValueC_t, 
_swigt__p_RavlN__Index2dC, 
_swigt__p_RavlN__Polygon2dC, 
_swigt__p_RavlN__IndexC, 
_swigt__p_RavlN__RealRange2dC, 
_swigt__p_RavlN__IndexRange2dC, 
_swigt__p_RavlImageN__FontC, 
_swigt__p_RavlN__RealRangeC, 
_swigt__p_RavlN__DLIterCTRavlN__Point2dC_t, 
_swigt__p_RavlN__DListCTRavlN__Point2dC_t, 
_swigt__p_RavlN__Array2dCTdouble_t, 
_swigt__p_RavlN__DListCTdouble_t, 
_swigt__p_RavlN__DLIterCTdouble_t, 
_swigt__p_RavlImageN__ImageCTdouble_t, 
_swigt__p_RavlN__Int16T, 
_swigt__p_RavlN__DListCTunsigned_int_t, 
_swigt__p_RavlN__DLIterCTunsigned_int_t, 
_swigt__p_RavlN__PointSet2dC, 
_swigt__p_RavlN__ByteT, 
_swigt__p_RavlN__UIntT, 
_swigt__p_RavlN__RealT, 
_swigt__p_std__ostream, 
_swigt__p_RavlImageN__ByteRGBValueC, 
_swigt__p_RavlN__DLIterCTlong_long_t, 
_swigt__p_RavlN__DListCTlong_long_t, 
_swigt__p_RavlImageN__RealRGBValueC, 
_swigt__p_RavlN__HashCTlong_long_long_long_t, 
_swigt__p_RavlN__HashIterCTlong_long_long_long_t, 
_swigt__p_RavlN__IntT, 
_swigt__p_RavlN__DListCTint_t, 
_swigt__p_RavlN__DLIterCTint_t, 
_swigt__p_RavlN__DLIterCTshort_t, 
_swigt__p_RavlN__DListCTshort_t, 
_swigt__p_RavlN__DateC, 
_swigt__p_RavlN__StringC, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
}

