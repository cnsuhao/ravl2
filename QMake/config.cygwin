###########################
# Make info for solaris systems
# $Id$

#######################
# Programs to use.

ifdef RAVL_CC
 CC = $(RAVL_CC)
else
 CC = gcc
endif

ifdef RAVL_CXX
 CXX = $(RAVL_CXX) 
else 
 CXX = g++
endif 

MKDEPFLAGS = -MM

ifdef RAVL_AR
 AR = $(RAVL_AR) 
else 
 AR = ar
endif 


ifndef XARGS 
 XARGS = xargs 
endif 

ifndef TR
 TR = tr 
endif 

ifndef DYNAMICFLAG
DYNAMICFLAG = -rdynamic 
endif 

ARFLAGS = ruc
MKDIR = mkdir -p
CP = cp
CHMOD = chmod
TOUCH=touch
RM=rm

EXEEXT=.exe#

LIBPATHSWITCH = -Wl,-rpath=#

AMKDEPFLAGS = -Wp,-MMD,$(WORKTMP)/$*.d
MKDEPUP = echo -n '$$(INST_OBJS)/' > $(INST_DEPEND)/$*.d ; cat $(WORKTMP)/$*.d  >> $(INST_DEPEND)/$*.d ; \
 rm $(WORKTMP)/$*.d

############################
# Universal flags.

CFLAGS   = -Wall -pipe 
CCFLAGS  =  -pipe 
CCPPFLAGS= -DGNU -D__$(ARC)__ -Dunix 
CPPFLAGS = -DGNU -D__$(ARC)__ -Dunix
LDFLAGS = 
PAR_MAKE = 
# --jobs=$(PROCS)

UNDEFSYMB = -u #


############################
# 'debug' variant.

ifeq ($(VAR),debug)
 CFLAGS += -g -DRAVL_CHECK
 CCFLAGS += -g -DRAVL_CHECK
 LDFLAGS += -g 
endif

############################
# 'check' variant.

ifeq ($(VAR),check)
 CFLAGS += -O -DRAVL_CHECK
 CCFLAGS += -O -DRAVL_CHECK
 LDFLAGS += -O
endif

############################
# 'opt' variant.

ifeq ($(VAR),opt)
 CFLAGS += -O2 -DNDEBUG
 CCFLAGS += -O2 -DNDEBUG
 LDFLAGS += -O2
endif

############################
# 'shared' variant.

#ifeq ($(VAR),shared)
ifdef SHAREDBUILD
 CFLAGS += -shared -O2 -DNDEBUG
 CCFLAGS += -shared -O2 -DNDEBUG
 LDLIBFLAGS = -shared -O2
 LDFLAGS += -O2 -Wl,-export-dynamic -Wl,-rpath=$(PROJECT_OUT)/$(ARC)/$(VAR)/lib
endif

############################
# 'prof' variant.

ifeq ($(VAR),prof)
 CFLAGS += -O2 -p -DNDEBUG
 CCFLAGS += -O2 -p -DNDEBUG
 LDFLAGS += -O2 -p 
endif

############################
# 'gprof' variant.

ifeq ($(VAR),gprof)
 CFLAGS += -O2 -pg -DNDEBUG
 CCFLAGS += -O2 -pg -DNDEBUG
 LDFLAGS += -O2 -pg 
endif
