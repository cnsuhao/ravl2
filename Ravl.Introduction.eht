! author="Bill Christmas, Charles Galambos"
! children="Naming Conventions;Documentation;Reference Counting;Debugging"
: Recognition And Vision Library 

    <p>This C++ library provides basic classes, together with a range of Image Processing, Vision and Pattern Recognition classes.</p>

    <p>Why should you use this library?</p>

    <ul>
      <li>It is distributed under the <a
      href="http://www.gnu.org/copyleft/lesser.html">GNU Lesser General Public
      License</a></li>
      <li>It is intended to be portable to any operating system / platform that
      conforms to the Posix standard.</li>
      <li>It has a simple user interface: the user does not have to use
      pointers or deal with heap management.  Java programmers should find the
      interface reasonably familiar.</li>
      </li>
    </ul>

    <p>Implementation issues:</p>

    <ul>
      <li>Supports Solaris, Linux, Irix, M$ VC++.</li>
      <li>Uses other libs iff they are under the LGPL.</li>
      <li>RAVL will be modular, so parts needed for a particular applications can be separated out easily.
      <li>Archive to be maintained under <a href="http://www.gnu.org/software/cvs/">CVS</a>.</li>. Details of how to access this archive can be found at <a href="http://sourceforge.net/cvs/?group_id=24497">source forge</a>.
    </ul>

    <p>Some notes: </p>
    <ul>
	<li> There are in fact two versions of the the documentation, 'user' and 'develop'. User documentation
            is aimed at people who only want to use the classes as they are and have no wish to know the details
            of how the work. As such the user documentation only gives details of the public interface offered by
            those classes which are intended for use in code using the RAVL library.  The 'develop' documentation
            on the other hand gives information about all the elements of a class, including private member variables
            and functions. This documentation is intended for people who wish to make changes to the library to either
	   extend to modify its functionality.
	</li>
	<li>
	  In the code you will often see reference to RAVL with only the first letter in upper case, this is to
stop the RavlN namespace being confused with a macro definition as set out in the <a href="Ravl.Introduction.Naming_Conventions.html">  naming conventions </a>.
	</li>
