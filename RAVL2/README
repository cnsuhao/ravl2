
                ------------------------------------
                RAVL, Recognition And Vision Library
                ------------------------------------


LICENSE
-------

The RAVL libraries are distributed under the GNU LESSER GENERAL PUBLIC 
LICENSE (LGPL), however some of the tools built with the library have
been issued under the more restrictive GNU GENERAL PUBLIC LICENSE, the
headers attached to each of the files in the project indicate which of 
these apply.

It should be noted that this library is still in development so interfaces 
may change in future releases. RAVL is split up into modules some of which
are more stable than others, following is summary of the current status.

Stable     : QMake Core OS 
Development: Math PatternRec Image 3D Logic SourceTools GUI Applications

Contributions to the library or suggestions on how it can be improved 
are welcome they can be posted on the sourceforge web pages 
( http://sourceforge.net/projects/ravl ) or sent directly to me at
C.Galambos@eim.surrey.ac.uk


INSTALLATION UNDER LINUX/UNIX
-----------------------------

Up-to-date installation instructions should be found at:

http://www.ee.surrey.ac.uk/CVSSP/Ravl/RavlDoc/share/doc/RAVL/Auto/Basic/Tree/Ravl.Installation.html


Once RAVL is installed programs can be compiled with an alias similar
to the following:

alias qm gmake -f [location]/share/RAVL/QMake/QMake.mk PROJECT_OUT=$(HOME)/build

if you've put RAVL's bin in the path there is also a 'qm' script which 
invokes the make system in a simlar way.

Some notes on installation:

- RAVL is getting quite large, if you don't want to compile all the modules
  you can remove the '.r' from the end of the directory names in the root 
  defs.mk file.  In general modules later in the list generally depend on 
  those found earlier so care must be with which modules are disabled.  (But
  there *may* be some circular dependencies.)
  Required modules for particular tools can be found in the documentation. 
  (Or will be soon...)

- By default the install process uses the compiler in your path.  This
  isn't always best and you may want to change it. This can be done by
  setting CC and CXX to the locations of the C and C++ compilers
  respectively in the system configuration file. The configuration
  file can be found in Ravl/QMake/config.$(ARC) where arc is one of
  linux, sgi, sol2 etc., depending on your machine.

- A version of the ccmath source code which will compile under QMake is
  included the RAVL releases and as a separate file available for download.
  Using this is NOT guaranteed to give the best code as the QMake release
  does not currently make use of assembler provided with the official package.
  It does make it much easier to install. If you don't wish to use this
  code remove the 'CCMath.r' from the NESTED line in the Ravl/defs.mk file.

- RAVL can be made to use an external version of CCMath.  The code
  has been tested with version 2.2.1, but I would expect it to work with   
  older versions as well.  The location of the ccmath package is set
  in Ravl/Math/CCMath/CCMath.def: set the 'CCMATH' variable to the appropriate
  directory, uncomment two lines following it, and comment out any other
  'EXELIB' lines later in the file.  

- The appropriate version of perl (Tested with 5.005_03) must be in your 
  default path.

- If you want to compile the GUI code 'pkg-config' should be on your path
  before running the install script. If you don't need the module just remove
  '.r' after the directory name in the root defs.mk file.  If you do this you
  may need to disable some programs in the Applications directory, this can be
  done by modifying the defs.mk in this directory in a similar way.

- If you want temporary files to go somewhere other that /tmp you need
  to set the enviromental variable DEFAULTTMP.  And add something like
  
   setenv DEFAULTTMP /buf

  to your enviroment setup (.cshrc for me)

NOTE: Most of the development of RAVL is being done on a Suse 10
box with gcc-4.0.2; at this stage in development things are most
likely to work on a similar box.  The installation system should be 
changed to use a 'configure' script, its on my todo list.


INSTALLATION FOR VISUAL C++
---------------------------

These instructions are hideously out-of-date.

In order to compile RAVL with Visual C++ two things are needed.
First you will need the latest service pack for Visual Studio. Secondly,
you have to persuade Visual studio to recognised .cc and .hh files as 
C++ source. The tweeks needed are described in 

  http://support.Microsoft.com/support/kb/articles/Q181/5/06.ASP,

there's a program which will do this automaticly called CCFix. It can
be found at: 

  http://www.vapourtech.com/dev/software.php

The project file for Visual C++ can be found in the MSVC directory. There
is a problem with the dependency checking as if a project include two
different libraries that both include a third you will get multiply
defined symbol warnings. These can be safely ignored.



